using System;






































































































































































































































https://www.msc.com/can");
https://www.msc.com/can";














https://www.msc.com/can");

























































































































































































































































https://www.cma-cgm.com/ebusiness/tracking");
https://www.cma-cgm.com/ebusiness/tracking";


























































































































































https://aplinfo.apl.com/homeport/login.html");
https://aplinfo.apl.com/homeport/login.html";

















http://aplinfo.apl.com/tracking/");
http://aplinfo.apl.com/tracking/";


















































































































https://aplinfo.apl.com/homeport/login.html");
https://aplinfo.apl.com/homeport/login.html";

















http://aplinfo.apl.com/tracking/");
http://aplinfo.apl.com/tracking/";




















































































































































































https://ecomm.one-line.com/");
https://ecomm.one-line.com/ecom/CUP_HOM_3301.do?sessLocale=en?sessLocale=en");
https://www.cma-cgm.com/ebusiness/tracking";

































































































































































































https://www.nykline.com/ecom/CUP_HOM_3301.do");
https://www.cma-cgm.com/ebusiness/tracking";

















































































https://www.hapag-lloyd.com/en/online-business/tracing/tracing-by-booking.html");
https://www.hapag-lloyd.com/en/online-business/tracing/tracing-by-booking.html";



















































































































































































































































































































http://www.zim.com/pages/findcontainer.aspx");
http://www.zim.com/pages/findcontainer.aspx";



















































































































































































http://web.molpower.com/Tracking/Main/Home");
http://web.molpower.com/Tracking/Main/Home";












































































https://moc.oocl.com/party/cargotracking/mobile/mobile_ct_search.jsf?ANONYMOUS_BEHAVIOR=BUILD_UP&ENTRY_TYPE=OOCL&ENTRY=MCC");











































































































https://www.hmm21.com/cms/business/ebiz/trackTrace/trackTrace/index.jsp");
https://www.hmm21.com/cms/business/ebiz/trackTrace/trackTrace/index.jsp";






















































































































https://www.shipmentlink.com/servlet/TDB1_CargoTracking.do");
https://www.shipmentlink.com/servlet/TDB1_CargoTracking.do";


































































































































































































































































https://www.yangming.com/");
https://www.yangming.com/e-service/Track_Trace/track_trace_cargo_tracking.aspx");




























































































































        //                if (lstDischarged.Count > 0)
        //                {
        //                    DateTime DischargeDate = lstDischarged.Max(p => p);
        //                    xlWorkSheet.Cells[i, 5] = DischargeDate.ToShortDateString();
        //                }

        //                if (lstEmptyContainer.Count > 0)
        //                {
        //                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
        //                    xlWorkSheet.Cells[i, 6] = EmptyContainer.ToShortDateString();
        //                }

        //                driver.Navigate().Back();

        //            }

        //            // Disable file override confirmaton message  
        //            xlApp.DisplayAlerts = false;
        //            xlWorkBook.SaveAs(filename, Excel.XlFileFormat.xlOpenXMLWorkbook,
        //                Missing.Value, Missing.Value, Missing.Value, Missing.Value, Excel.XlSaveAsAccessMode.xlNoChange,
        //                Excel.XlSaveConflictResolution.xlLocalSessionChanges, Missing.Value, Missing.Value,
        //                Missing.Value, Missing.Value);
        //            xlWorkBook.Close();
        //            xlApp.Quit();

        //            Marshal.ReleaseComObject(xlWorkSheet);
        //            Marshal.ReleaseComObject(xlWorkBook);
        //            Marshal.ReleaseComObject(xlApp);

        //            MessageBox.Show("Yang Ming file updated");
        //        }
        //        catch (Exception ex)
        //        {
        //            MessageBox.Show(ex.ToString(), "Yang Ming Activity");
        //        }
        //    }
        //    else if (cb_ssl.Text == "SM LINE")
        //    {

        //        Excel.Application xlApp = new Excel.Application();
        //        Excel.Workbook xlWorkBook = xlApp.Workbooks.Open(filename, Type.Missing, false,
        //                                     Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing,
        //                                     Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);
        //        Excel.Worksheet xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);

        //        Excel.Range xlRange = xlWorkSheet.UsedRange;
        //        //int rowNumber = xlRange.Rows.Count + 1;
        //        object[,] values = (object[,])xlRange.Value2;


        //        try
        //        {

        //            driver.Navigate().GoToUrl("http://esvc.smlines.com/smline/CUP_HOM_3301.do");

        //            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //            bool flag = false;

        //            for (int i = 1; i <= xlRange.Rows.Count; i++)
        //            {

        //                List<DateTime> lstDischarged = new List<DateTime>();
        //                List<DateTime> lstEmptyContainer = new List<DateTime>();

        //                //driver.SwitchTo().Frame("_frame1");

        //                if (flag == false)
        //                {

        //                    driver.SwitchTo().DefaultContent();

        //                    IWebElement rdoBookingNo = driver.FindElement(By.XPath("//*[@id='searchType']"));
        //                    rdoBookingNo.Click();


        //                    IWebElement optionBooking = driver.FindElement(By.XPath("//*[@id='searchType']/option[1]"));
        //                    optionBooking.Click();

        //                    flag = true;
        //                }

        //                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

        //                string bookingno = Convert.ToString(values[i, 1]).Trim();

        //                IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='searchName']"));
        //                txt_bookingno.Clear();
        //                txt_bookingno.SendKeys(bookingno);

        //                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

        //                IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='btnSearch']"));
        //                btnTrack.Click();

        //                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //                Thread.Sleep(3000);


        //                IWebElement txt_result = null;

        //                try
        //                {

        //                    txt_result = driver.FindElement(By.XPath("//*[@id='mainInfo']"));

        //                    driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //                    if (txt_result.Text.Contains("No data was found"))
        //                    {
        //                        xlWorkSheet.Cells[i, 3] = "NO CONTAINER ACTIVITY";
        //                    }
        //                    else if (txt_result.Text.Contains("Not Assigned"))
        //                    {
        //                        xlWorkSheet.Cells[i, 3] = "NO CONTAINER ACTIVITY";
        //                        //IWebElement result_txt = driver.FindElement(By.XPath("//*[@id='wrapper']/div/div[1]/h2"));
        //                        //if (result_txt.Text.Trim() == "No Results")
        //                        //{
        //                        //    xlWorkSheet.Cells[i, 3] = "NO CONTAINER ACTIVITY";
        //                        //}
        //                        //else if (result_txt.Text.Trim() == "Results")
        //                        //{
        //                        //    xlWorkSheet.Cells[i, 3] = "Activity";
        //                        //}
        //                    }
        //                    else
        //                    {
        //                        xlWorkSheet.Cells[i, 3] = "Activity";

        //                        // DataTable table = getGrid("//*[@id='main-grid']");

        //                        DataTable table = new DataTable();

        //                        HtmlAgilityPack.HtmlDocument docheader = new HtmlAgilityPack.HtmlDocument();
        //                        IWebElement resulttableHeader = driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[2]/div/table"));


        //                        HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
        //                        IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='main-grid']"));

        //                        string tempheader = resulttableHeader.GetAttribute("innerHTML");

        //                        string temp = resulttable.GetAttribute("innerHTML");

        //                        docheader.LoadHtml(tempheader);

        //                        doc.LoadHtml(temp);


        //                        //table.Columns.Add("Booking No.");
        //                        //table.Columns.Add("Container No.");
        //                        //table.Columns.Add("Seal No.");
        //                        //table.Columns.Add("Size");
        //                        //table.Columns.Add("Event Date / Time ");
        //                        //table.Columns.Add("Status");
        //                        //table.Columns.Add("Place");
        //                        //table.Columns.Add("Weight");
        //                        //table.Columns.Add("Purchase Order No");
        //                        //table.Columns.Add("BookingNo");
        //                        var headers = docheader.DocumentNode.SelectNodes("//tr/th");

        //                        int count = 1;
        //                        foreach (HtmlNode header in headers)
        //                        {
        //                            if (header.InnerText.Trim() == "&nbsp;")
        //                            {
        //                                table.Columns.Add(header.InnerText.Trim() + count.ToString());
        //                                count++;
        //                            }
        //                            else
        //                            {
        //                                table.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
        //                            }
        //                        }
        //                        //select rows with td elements
        //                        foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
        //                        {
        //                            table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
        //                        }


        //                        xlWorkSheet.Cells[i, 4] = table.Rows.Count - 1;

        //                        for (int k = 1; k <= table.Rows.Count - 1; k++)
        //                        {
        //                            IWebElement containerNo = driver.FindElement(By.XPath("//*[@id='" + k + "']/td[4]/a"));

        //                            containerNo.Click();

        //                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

        //                            DataTable containerDtls = getGrid("//*[@id='detail']");

        //                            foreach (DataRow dr in containerDtls.Rows)
        //                            {
        //                                if (dr[1].ToString().Contains("Unloaded from") && dr[1].ToString().Contains("at Port of Discharging"))
        //                                {
        //                                    if (Convert.ToDateTime(dr[3]) <= DateTime.Now)
        //                                    {
        //                                        lstDischarged.Add(Convert.ToDateTime(dr[3]));
        //                                    }
        //                                }
        //                                else if (dr[1].ToString().Contains("Empty Container Returned from Customer"))
        //                                {
        //                                    if (Convert.ToDateTime(dr[3]) <= DateTime.Now)
        //                                    {
        //                                        lstEmptyContainer.Add(Convert.ToDateTime(dr[3]));
        //                                    }
        //                                }
        //                            }

        //                            //driver.Navigate().Back();
        //                        }
        //                    }
        //                }
        //                catch (Exception ex)
        //                {
        //                    xlWorkSheet.Cells[i, 3] = "Error on website";
        //                }


        //                if (lstDischarged.Count > 0)
        //                {
        //                    DateTime DischargeDate = lstDischarged.Max(p => p);
        //                    xlWorkSheet.Cells[i, 5] = DischargeDate.ToShortDateString();
        //                }

        //                if (lstEmptyContainer.Count > 0)
        //                {
        //                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
        //                    xlWorkSheet.Cells[i, 6] = EmptyContainer.ToShortDateString();
        //                }

        //            }

        //            // Disable file override confirmaton message  

        //            MessageBox.Show("SM Lines file updated");
        //        }
        //        catch (Exception ex)
        //        {
        //            MessageBox.Show(ex.ToString(), "SM Lines Activity");
        //        }

        //        xlApp.DisplayAlerts = false;
        //        xlWorkBook.SaveAs(filename, Excel.XlFileFormat.xlOpenXMLWorkbook,
        //            Missing.Value, Missing.Value, Missing.Value, Missing.Value, Excel.XlSaveAsAccessMode.xlNoChange,
        //            Excel.XlSaveConflictResolution.xlLocalSessionChanges, Missing.Value, Missing.Value,
        //            Missing.Value, Missing.Value);
        //        xlWorkBook.Close();
        //        xlApp.Quit();

        //        Marshal.ReleaseComObject(xlWorkSheet);
        //        Marshal.ReleaseComObject(xlWorkBook);
        //        Marshal.ReleaseComObject(xlApp);

        //    }

        //    else if (cb_ssl.Text == "HAMBURG")
        //    {

        //        Excel.Application xlApp = new Excel.Application();
        //        Excel.Workbook xlWorkBook = xlApp.Workbooks.Open(filename, Type.Missing, false,
        //                                     Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing,
        //                                     Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);
        //        Excel.Worksheet xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);

        //        Excel.Range xlRange = xlWorkSheet.UsedRange;
        //        //int rowNumber = xlRange.Rows.Count + 1;
        //        object[,] values = (object[,])xlRange.Value2;

        //        bool flag = false;

        //        try
        //        {

        //            driver.Navigate().GoToUrl("https://www.hamburgsud-line.com/liner/en/liner_services/ecommerce/track_trace/index.html");

        //            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //            //bool flag = false;

        //            for (int i = 1; i <= xlRange.Rows.Count; i++)
        //            {

        //                List<DateTime> lstDischarged = new List<DateTime>();
        //                List<DateTime> lstEmptyContainer = new List<DateTime>();

        //                if (flag == false)
        //                {
        //                    foreach (IWebElement frm in driver.FindElements(By.Id("ePortalMainFrame")))
        //                    {
        //                        driver.SwitchTo().DefaultContent();
        //                        driver.SwitchTo().Frame("ePortalMainFrame");
        //                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

        //                        flag = true;
        //                    }
        //                }

        //                string bookingno = Convert.ToString(values[i, 1]).Trim();

        //                IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='j_idt6:searchForm:j_idt8:inputReferences']"));
        //                txt_bookingno.Clear();
        //                txt_bookingno.SendKeys(bookingno);

        //                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

        //                IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='j_idt6:searchForm:j_idt8:search-submit']"));
        //                btnTrack.Click();

        //                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //                Thread.Sleep(3000);


        //                IWebElement txt_result = null;

        //                bool bookingFoundflag = false;

        //                try
        //                {

        //                    try
        //                    {
        //                        txt_result = driver.FindElement(By.XPath("//*[@id='j_idt6:searchForm:messages']/div"));

        //                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

        //                        bookingFoundflag = true;

        //                    }
        //                    catch (Exception ex)
        //                    {
        //                        bookingFoundflag = false;
        //                    }


        //                    if (bookingFoundflag == true)
        //                    {
        //                        xlWorkSheet.Cells[i, 3] = "NO CONTAINER ACTIVITY";
        //                    }
        //                    else
        //                    {
        //                        xlWorkSheet.Cells[i, 3] = "Activity";

        //                        // DataTable table = getGrid("//*[@id='main-grid']");

        //                        DataTable table = new DataTable();
        //                        DataTable SingleContainerGrid = new DataTable();
        //                        try
        //                        {
        //                            table = getGrid("//*[@id='j_idt6:searchForm:j_idt28:j_idt31']/div/table");
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            SingleContainerGrid = getGrid("//*[@id='j_idt6:searchForm:j_idt43:j_idt88']/div/table");
        //                        }

        //                        if (table.Rows.Count > 1)
        //                        {
        //                            xlWorkSheet.Cells[i, 4] = table.Rows.Count;

        //                            for (int j = 0; j < table.Rows.Count; j++)
        //                            {
        //                                IWebElement SingleContainerClick = driver.FindElement(By.XPath("//*[@id='j_idt6:searchForm:j_idt28:j_idt31:" + j + ":contDetailsLink']"));

        //                                SingleContainerClick.Click();

        //                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

        //                                Thread.Sleep(1000);

        //                                SingleContainerGrid.Clear();
        //                                SingleContainerGrid = getGrid("//*[@id='j_idt6:searchForm:j_idt43:j_idt88']/div/table");

        //                                foreach (DataRow dr in SingleContainerGrid.Rows)
        //                                {
        //                                    if (dr[2].ToString() == "Discharge")
        //                                    {
        //                                        lstDischarged.Add(Convert.ToDateTime(dr[0]));
        //                                    }
        //                                    else if (dr[2].ToString() == "Empty in Depot")
        //                                    {
        //                                        lstEmptyContainer.Add(Convert.ToDateTime(dr[0]));
        //                                    }
        //                                }

        //                                IWebElement backbutton = driver.FindElement(By.XPath("//*[@id='j_idt6:searchForm:j_idt43:contDetailsBackButton']"));
        //                                backbutton.Click();
        //                            }
        //                        }
        //                        else if (SingleContainerGrid.Rows.Count > 1)
        //                        {
        //                            xlWorkSheet.Cells[i, 4] = 1;

        //                            foreach (DataRow dr in SingleContainerGrid.Rows)
        //                            {
        //                                if (dr[2].ToString() == "Discharge")
        //                                {
        //                                    lstDischarged.Add(Convert.ToDateTime(dr[0]));
        //                                }
        //                                else if (dr[2].ToString() == "Empty in Depot")
        //                                {
        //                                    lstEmptyContainer.Add(Convert.ToDateTime(dr[0]));
        //                                }
        //                            }
        //                        }
        //                    }
        //                }
        //                catch (Exception ex)
        //                {
        //                    xlWorkSheet.Cells[i, 3] = "Error on website";
        //                }


        //                if (lstDischarged.Count > 0)
        //                {
        //                    DateTime DischargeDate = lstDischarged.Max(p => p);
        //                    xlWorkSheet.Cells[i, 5] = DischargeDate.ToShortDateString();
        //                }

        //                if (lstEmptyContainer.Count > 0)
        //                {
        //                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
        //                    xlWorkSheet.Cells[i, 6] = EmptyContainer.ToShortDateString();
        //                }

        //            }

        //            // Disable file override confirmaton message  

        //            MessageBox.Show("HAMBURG SUD file updated");
        //        }
        //        catch (Exception ex)
        //        {
        //            MessageBox.Show(ex.ToString(), "HAMBURG SUD Activity");
        //        }

        //        xlApp.DisplayAlerts = false;
        //        xlWorkBook.SaveAs(filename, Excel.XlFileFormat.xlOpenXMLWorkbook,
        //            Missing.Value, Missing.Value, Missing.Value, Missing.Value, Excel.XlSaveAsAccessMode.xlNoChange,
        //            Excel.XlSaveConflictResolution.xlLocalSessionChanges, Missing.Value, Missing.Value,
        //            Missing.Value, Missing.Value);
        //        xlWorkBook.Close();
        //        xlApp.Quit();

        //        Marshal.ReleaseComObject(xlWorkSheet);
        //        Marshal.ReleaseComObject(xlWorkBook);
        //        Marshal.ReleaseComObject(xlApp);

        //    }
        //}

        #endregion

        public void PopUps()
        {
            Boolean presentFlag = false;
            try
            {
                IAlert alert = driver.SwitchTo().Alert();
                string popmsg = driver.SwitchTo().Alert().Text;

                presentFlag = true;
                alert.Accept();
            }
            catch (NoAlertPresentException ex)
            {
                ex.ToString();
            }
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            try
            {
                if (driver != null)
                {
                    driver.Close();
                    driver.Dispose();
                }
            }
            catch (Exception ex)
            {

            }
        }

        public DataTable getGrid(string xpath)
        {
            DataTable table = new DataTable();

            HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
            IWebElement resulttable = driver.FindElement(By.XPath(xpath));

            string temp = resulttable.GetAttribute("innerHTML");

            doc.LoadHtml(temp);
            var headers = doc.DocumentNode.SelectNodes("//tr/th");

            foreach (HtmlNode header in headers)
            {
                table.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
            }

            // select rows with td elements
            foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
            {
                table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
            }


            return table;
        }


        public DataTable getGrid(IWebElement element)
        {
            DataTable table = new DataTable();

            HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
            //IWebElement resulttable = driver.FindElement(By.XPath(xpath));

            string temp = element.GetAttribute("innerHTML");

            doc.LoadHtml(temp);
            var headers = doc.DocumentNode.SelectNodes("//tr/th");

            foreach (HtmlNode header in headers)
            {
                table.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
            }

            // select rows with td elements
            foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
            {
                table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
            }


            return table;
        }
        private void btnUpload_Click(object sender, EventArgs e)
        {
            MSCFlag = false;
            AplFlag = false;
            ONEflag = false;
            NYKflag = false;
            Hyundaiflag = true;
            zimflag = false;
            EverGreenflag = false;
            YangMingflag = false;
            SMLINEsflag = false;
            Hamburgflag = false;
            Maerskflag = false;
            Safmarineflag = false;

            OpenFileDialog flg = new OpenFileDialog();

            DataTable csvData = new DataTable();

            DataTable errorData = new DataTable();

            if (flg.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                string txtpath = flg.FileName;

                int count = 0;
                try
                {
                    using (Microsoft.VisualBasic.FileIO.TextFieldParser csvReader = new Microsoft.VisualBasic.FileIO.TextFieldParser(txtpath))
                    {
                        csvReader.SetDelimiters(new string[] { "," });
                        csvReader.HasFieldsEnclosedInQuotes = true;
                        string[] colFields = csvReader.ReadFields();
                        foreach (string column in colFields)
                        {
                            DataColumn datecolumn = new DataColumn(column);
                            datecolumn.AllowDBNull = true;
                            csvData.Columns.Add(datecolumn);

                            DataColumn datecolumn1 = new DataColumn(column);
                            datecolumn1.AllowDBNull = true;
                            errorData.Columns.Add(datecolumn1);
                        }

                        csvData.Columns.Add("Container Number");
                        csvData.Columns.Add("Activity");
                        csvData.Columns.Add("ContainerCount");
                        csvData.Columns.Add("DischargedDate");
                        csvData.Columns.Add("EmptyDepotDate");

                        errorData.Columns.Add("Reason");

                        while (!csvReader.EndOfData)
                        {
                            string[] fieldData = csvReader.ReadFields();

                            //Making empty value as null
                            for (int i = 0; i < fieldData.Length; i++)
                            {
                                if (fieldData[i].Trim() == "")
                                {
                                    fieldData[i] = null;
                                }
                                else
                                {
                                    fieldData[i] = fieldData[i].ToUpper();
                                }

                                if (i == fieldData.Length - 1)
                                {

                                    //if ((fieldData[0] == null) && (fieldData[1] == null) && (fieldData[2] == null) && (fieldData[3] == null) && (fieldData[4] == null) && (fieldData[5] == null) && (fieldData[7] == null) && (fieldData[8] == null) && (fieldData[9] == null) && (fieldData[10] == null))
                                    //{
                                    //    errorData.Rows.Add(fieldData[0], fieldData[1], fieldData[2], fieldData[3], fieldData[4], fieldData[5], fieldData[7], fieldData[8], fieldData[9], fieldData[10], "Field is Empty");
                                    //}
                                    //else
                                    //{
                                    csvData.Rows.Add(fieldData);
                                    //}
                                }
                            }
                        }
                    }

                    csvData.DefaultView.Sort = "S.S.L";
                    csvData = csvData.DefaultView.ToTable();

                    progressBar1.Maximum = csvData.Rows.Count - 1;

                    DataTable result = new DataTable();

                    result = getDetails(csvData);

                    dgExcelData.DataSource = result;
                    dgExcelData.Refresh();

                    MessageBox.Show("Task Completed");

                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.ToString(), "Main Event");
                }
            }
        }


        public DataTable getDetails(DataTable data)
        {
            try
            {
                string currentSSL = "";
                int drowcount = 0;

                foreach (DataRow drow in data.Rows)
                {
                    progressBar1.Value = drowcount++;

                    if (drow["S.S.L"].ToString() != "" && drow["Booking #"].ToString() != "")
                    {
                        if (drow["S.S.L"].ToString() != currentSSL)
                        {
                            WebSiteUpdationCount = 0;
                            currentSSL = "";
                        }

                        if (WebSiteUpdationCount < 3)
                        {
                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "MSC")
                            {
                                if (drow["S.S.L"].ToString().Trim() == "MEDITERRANEAN SHIPPING COMPANY")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        driver.Navigate().GoToUrl("https://www.msc.com/can");
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);


                                        Thread.Sleep(3000);

                                        //if (isElementPresent(driver, By.XPath("//*[@id='newsletterSignupModal']/a")))
                                        //{   
                                        //    //*[@id="ctl00_ctl00_NewsetterSignupPopup_btnReject"]
                                        //    IWebElement btnClose = driver.FindElement(By.XPath("//*[@id='newsletterSignupModal']/a"));
                                        //    btnClose.Click();
                                        //}
                                        if (MSCFlag == false)
                                        {
                                            Thread.Sleep(5000);

                                            if (isElementPresent(driver, By.XPath("//*[@id='ctl00_ctl00_NewsetterSignupPopup_btnReject']")))
                                            {
                                                IWebElement btnClose = driver.FindElement(By.XPath(" //*[@id='ctl00_ctl00_NewsetterSignupPopup_btnReject']"));
                                                btnClose.Click();
                                                MSCFlag = true;
                                            }
                                        }


                                        IWebElement txt_tracking = driver.FindElement(By.XPath("//*[@id='btnTrack']"));
                                        txt_tracking.Click();


                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_Header_TrackSearch_txtBolSearch_TextField']"));

                                        string bookingno = Convert.ToString(drow["Booking #"].ToString()).Trim();
                                        txt_bookingno.SendKeys(bookingno);

                                        IWebElement btn_search = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_Header_TrackSearch_hlkSearch']"));
                                        btn_search.Click();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);


                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_pnlTrackingResults']/h3"));

                                        if (txt_result.Text.Contains("No matching tracking"))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else if (txt_result.Text.Contains("We are unable to service your request at this time, please try again later."))
                                        {
                                            DialogResult dres = MessageBox.Show("MSC WebSite is not Working tempararily. Would you like to terminate application?", "Exit?", MessageBoxButtons.YesNo, MessageBoxIcon.Stop);

                                            if (dres == DialogResult.Yes)
                                            {
                                                Application.Exit();
                                            }
                                            else
                                            {
                                                drow["Activity"] = "Site Not Working";
                                            }
                                        }
                                        else
                                        {
                                            IWebElement txt_container = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_pnlTrackingResults']"));

                                            if (txt_container.Text.Contains("Booking Number:") && txt_container.Text.Contains("Bill of lading:"))
                                            {
                                                int BillOfLadingcount = Convert.ToInt32(txt_container.Text.Substring(txt_container.Text.IndexOf("(") + 1, 1));

                                                int FirstContainerCount = 0;

                                                for (int j = 0; j < BillOfLadingcount; j++)
                                                {
                                                    IWebElement IClick1 = driver.FindElement(By.XPath(" //*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl0" + j + "_hlkBOLToggle']"));

                                                    if (BillOfLadingcount > 1)
                                                    {
                                                        IClick1.Click();
                                                        IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                        exec.ExecuteScript("scroll(0,-250);");
                                                    }

                                                    FirstContainerCount = FirstContainerCount + Convert.ToInt32(IClick1.Text.Substring(IClick1.Text.IndexOf("(") + 1, 1));

                                                    int CurrentBillContainerCount = Convert.ToInt32(IClick1.Text.Substring(IClick1.Text.IndexOf("(") + 1, 1));

                                                    for (int k = 1; k <= CurrentBillContainerCount; k++)
                                                    {
                                                        IWebElement IClick = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl0" + j + "_rptContainers_ctl0" + k + "_hlkContainerToggle']"));
                                                        IClick.Click();

                                                        System.Threading.Thread.Sleep(1000);

                                                        HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                                        IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl0" + j + "_rptContainers_ctl0" + k + "_pnlContainer']/table[2]"));

                                                        string temp = resulttable.GetAttribute("innerHTML");

                                                        doc.LoadHtml(temp);
                                                        var headers = doc.DocumentNode.SelectNodes("//tr/th");
                                                        DataTable table = new DataTable();
                                                        foreach (HtmlNode header in headers)
                                                            table.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                                                                        // select rows with td elements 
                                                        foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                            table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim()).ToArray());

                                                        foreach (DataRow dr in table.Rows)
                                                        {
                                                            if (dr["Description"].ToString() == "Discharged")
                                                            {
                                                                lstDischarged.Add(DateTime.Parse(dr["Date"].ToString(), new CultureInfo("en-IN")));
                                                            }
                                                            else if (dr["Description"].ToString() == "Empty in Container Yard")
                                                            {
                                                                lstEmptyContainer.Add(DateTime.Parse(dr["Date"].ToString(), new CultureInfo("en-IN")));
                                                            }
                                                        }

                                                    }
                                                }

                                                //drow["Activity"] = "DUE BY 10.00 WITH " + FirstContainerCount + " CNTR ACTIVITY";

                                                drow["Activity"] = FirstContainerCount + " CONTAINER ACTIVITY OUT OF " + FirstContainerCount + " CONTAINERS";
                                                drow["ContainerCount"] = FirstContainerCount;

                                                if (lstDischarged.Count > 0)
                                                {
                                                    DateTime DischargeDate = lstDischarged.Max(p => p);
                                                    drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                                }

                                                if (lstEmptyContainer.Count > 0)
                                                {
                                                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                    drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                                }

                                            }
                                            else if (txt_container.Text.Contains("Container:"))
                                            {
                                                var temp = txt_container.Text;
                                                var arr = temp.Split(new char[] { '\r', '\n', '.', ' ' });
                                                var ContainerCount = Array.FindAll(arr, s => s.Equals("Container:")).Length;

                                                try
                                                {
                                                    for (int l = 1; l <= ContainerCount; l++)
                                                    {
                                                        IWebElement IClick1 = null;
                                                        int margin = 200;


                                                        if (l < 10)
                                                        {
                                                            while (!isElementPresent(driver, By.XPath(" //*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl0" + l + "_hlkContainerToggle']")))
                                                            {
                                                                IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                                exec.ExecuteScript("scroll(0," + margin + ");");
                                                                margin = margin + 200;
                                                            }

                                                            IClick1 = driver.FindElement(By.XPath(" //*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl0" + l + "_hlkContainerToggle']"));
                                                        }
                                                        else
                                                        {
                                                            while (!isElementPresent(driver, By.XPath(" //*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl" + l + "_hlkContainerToggle']")))
                                                            {
                                                                IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                                exec.ExecuteScript("scroll(0," + margin + ");");
                                                                margin = margin + 200;
                                                            }

                                                            IClick1 = driver.FindElement(By.XPath(" //*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl" + l + "_hlkContainerToggle']"));
                                                        }


                                                        string classname = IClick1.GetAttribute("class");


                                                        if (l != 1)
                                                            IClick1.Click();
                                                        else
                                                        {
                                                            IClick1.Click();
                                                            IClick1.Click();
                                                        }

                                                        HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();

                                                        IWebElement resulttable = null;

                                                        if (l < 10)
                                                        {
                                                            resulttable = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl0" + l + "_pnlContainer']/table[2]"));
                                                        }
                                                        else
                                                        {
                                                            resulttable = driver.FindElement(By.XPath("//*[@id='ctl00_ctl00_plcMain_plcMain_rptBOL_ctl00_rptContainers_ctl" + l + "_pnlContainer']/table[2]"));
                                                        }

                                                        string temp1 = resulttable.GetAttribute("innerHTML");

                                                        doc.LoadHtml(temp1);
                                                        var headers = doc.DocumentNode.SelectNodes("//tr/th");
                                                        DataTable table = new DataTable();
                                                        foreach (HtmlNode header in headers)
                                                            table.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                                                                        // select rows with td elements 
                                                        foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                            table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim()).ToArray());

                                                        foreach (DataRow dr in table.Rows)
                                                        {
                                                            if (dr["Description"].ToString() == "Discharged")
                                                            {
                                                                lstDischarged.Add(DateTime.Parse(dr["Date"].ToString(), new CultureInfo("en-IN")));
                                                            }
                                                            else if (dr["Description"].ToString() == "Empty in Container Yard")
                                                            {
                                                                lstEmptyContainer.Add(DateTime.Parse(dr["Date"].ToString(), new CultureInfo("en-IN")));
                                                            }
                                                        }
                                                    }

                                                    //drow["Activity"] = "DUE BY 10.00 WITH " + ContainerCount + " CNTR ACTIVITY";

                                                    drow["Activity"] = ContainerCount + " CONTAINER ACTIVITY OUT OF " + ContainerCount + " CONTAINERS";
                                                    drow["ContainerCount"] = ContainerCount;

                                                    if (lstDischarged.Count > 0)
                                                    {
                                                        DateTime DischargeDate = lstDischarged.Max(p => p);
                                                        drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                                    }

                                                    if (lstEmptyContainer.Count > 0)
                                                    {
                                                        DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                        drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                                    }
                                                }
                                                catch (Exception ex)
                                                {

                                                }

                                                System.Threading.Thread.Sleep(300);


                                            }
                                        }
                                        System.Threading.Thread.Sleep(2000);

                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "CMA-CGM")
                            {
                                if (drow["S.S.L"].ToString() == "CMA-CGM" || drow["S.S.L"].ToString() == "CMA CGM AMERICA INC")
                                {
                                    try
                                    {
                                        driver.Navigate().GoToUrl("https://www.cma-cgm.com/ebusiness/tracking");
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);


                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        IWebElement box_searchby = driver.FindElement(By.XPath("//*[@id='SearchBy']"));
                                        box_searchby.Click();
                                        box_searchby.SendKeys("Booking");
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);
                                        box_searchby.SendKeys(OpenQA.Selenium.Keys.Tab);

                                        IWebElement txt_reference = driver.FindElement(By.XPath("//*[@id='Reference']"));
                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();
                                        txt_reference.SendKeys(bookingno);

                                        IWebElement btn_search = driver.FindElement(By.XPath("//*[@id='wrapper']/div/div[2]/div/form/p[4]/input"));
                                        btn_search.Click();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='wrapper']/div/h1"));
                                        if (txt_result.Text.StartsWith("Containers for Booking"))
                                        {
                                            IWebElement result_txt = driver.FindElement(By.XPath("//*[@id='wrapper']/div/div[1]/h2"));
                                            if (result_txt.Text.Trim() == "No Results")
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                            else if (result_txt.Text.Trim() == "Results")
                                            {
                                                HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                                IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='t1']"));

                                                string temp = resulttable.GetAttribute("innerHTML");

                                                doc.LoadHtml(temp);
                                                var headers = doc.DocumentNode.SelectNodes("//tr/th");
                                                DataTable table = new DataTable();
                                                foreach (HtmlNode header in headers)
                                                    table.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                                                                // select rows with td elements 
                                                foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                    table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim()).ToArray());

                                                for (int k = 1; k <= table.Rows.Count; k++)
                                                {
                                                    IWebElement link_routing = driver.FindElement(By.XPath("//*[@id='t1']/tbody/tr[" + k + "]/td[2]/a"));
                                                    link_routing.Click();

                                                    driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                    HtmlAgilityPack.HtmlDocument doc1 = new HtmlAgilityPack.HtmlDocument();
                                                    IWebElement resulttable1 = driver.FindElement(By.XPath("//*[@id='container-moves']"));

                                                    string temp1 = resulttable1.GetAttribute("innerHTML");

                                                    doc1.LoadHtml(temp1);
                                                    var headers1 = doc1.DocumentNode.SelectNodes("//tr/th");
                                                    DataTable table1 = new DataTable();
                                                    foreach (HtmlNode header in headers1)
                                                        table1.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                                                                     // select rows with td elements 
                                                    foreach (var row in doc1.DocumentNode.SelectNodes("//tr[td]"))
                                                        table1.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim()).ToArray());

                                                    foreach (DataRow dr in table1.Rows)
                                                    {
                                                        if (dr["Moves"].ToString() == "Discharged")
                                                        {
                                                            lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)));
                                                            //xlWorkSheet.Cells[i, 5] = Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)).ToShortDateString();
                                                        }
                                                        else if (dr["Moves"].ToString() == "Empty in depot")
                                                        {
                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)));
                                                            //xlWorkSheet.Cells[i, 6] = Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)).ToShortDateString();
                                                        }
                                                    }

                                                    driver.Navigate().Back();
                                                    driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                                }

                                                //drow["Activity"] = "DUE BY 10.00 WITH " + table.Rows.Count + " CNTR ACTIVITY";

                                                drow["Activity"] = table.Rows.Count + " CONTAINER ACTIVITY OUT OF " + table.Rows.Count + " CONTAINERS";

                                                drow["ContainerCount"] = table.Rows.Count;

                                                if (lstDischarged.Count > 0)
                                                {
                                                    DateTime DischargeDate = lstDischarged.Max(p => p);
                                                    drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                                }

                                                if (lstEmptyContainer.Count > 0)
                                                {
                                                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                    drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                                }
                                            }
                                        }
                                        else if (txt_result.Text.StartsWith("Tracking details for Container"))
                                        {
                                            //drow["Activity"] = "DUE BY 10.00 WITH 1 CNTR ACTIVITY";

                                            drow["Activity"] = "1 CONTAINER ACTIVITY OUT OF 1 CONTAINERS";
                                            drow["ContainerCount"] = "1";

                                            HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                            IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='container-moves']"));

                                            string temp = resulttable.GetAttribute("innerHTML");

                                            doc.LoadHtml(temp);
                                            var headers = doc.DocumentNode.SelectNodes("//tr/th");
                                            DataTable table = new DataTable();
                                            foreach (HtmlNode header in headers)
                                                table.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                                                            // select rows with td elements 
                                            foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim()).ToArray());

                                            foreach (DataRow dr in table.Rows)
                                            {
                                                if (dr["Moves"].ToString() == "Discharged")
                                                {
                                                    //lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)));
                                                    drow["DischargedDate"] = Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)).ToShortDateString();
                                                }
                                                else if (dr["Moves"].ToString() == "Empty in depot")
                                                {
                                                    //lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)));
                                                    drow["EmptyDepotDate"] = Convert.ToDateTime(dr["Date"].ToString().Substring(4, 11)).ToShortDateString();
                                                }
                                            }
                                        }
                                        System.Threading.Thread.Sleep(1000);
                                        IWebElement btn_searchbtn = driver.FindElement(By.XPath("//*[@id='breadcrumb']/li[5]/a"));
                                        btn_searchbtn.Click();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "APL")
                            {
                                if (drow["S.S.L"].ToString() == "APL SHIPPING")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        if (AplFlag == false)
                                        {
                                            driver.Url = @"https://aplinfo.apl.com/homeport/login.html";
                                            driver.Navigate();
                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);
                                            System.Threading.Thread.Sleep(1000);

                                            IWebElement txt_userid = driver.FindElement(By.XPath("//*[@id='USERID']"));
                                            txt_userid.Click();
                                            txt_userid.SendKeys(Properties.Settings.Default.APLUserName);
                                            IWebElement txt_password = driver.FindElement(By.XPath("//*[@id='PASSWORD']"));
                                            txt_password.Click();
                                            txt_password.SendKeys(Properties.Settings.Default.APLPassword);
                                            System.Threading.Thread.Sleep(1000);
                                            IWebElement btn_login = driver.FindElement(By.XPath("//*[@id='FormsButton2']"));
                                            btn_login.Click();
                                            System.Threading.Thread.Sleep(2000);
                                            driver.SwitchTo().Window(driver.WindowHandles[driver.WindowHandles.Count - 1]).Close();
                                            System.Threading.Thread.Sleep(1000);
                                            driver.SwitchTo().Window(driver.WindowHandles[0]);
                                            System.Threading.Thread.Sleep(500);
                                            //driver.Navigate().GoToUrl("http://aplinfo.apl.com/tracking/");
                                            driver.Url = @"http://aplinfo.apl.com/tracking/";
                                            driver.Navigate();
                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            driver.SwitchTo().DefaultContent();


                                            IWebElement txt_bookingno = driver.FindElement(By.XPath("/html/body/table[2]/tbody/tr/td[1]/table/tbody/tr[2]/td/form/table/tbody/tr[2]/td/div/input[1]"));
                                            txt_bookingno.Click();
                                            string bookingno = Convert.ToString(drow["Booking #"]).Trim();
                                            txt_bookingno.SendKeys(bookingno);

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                                            IWebElement btn_go = driver.FindElement(By.XPath("/html/body/table[2]/tbody/tr/td[1]/table/tbody/tr[2]/td/form/table/tbody/tr[2]/td/div/input[9]"));
                                            btn_go.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                            AplFlag = true;
                                        }
                                        else
                                        {
                                            driver.SwitchTo().DefaultContent();

                                            driver.SwitchTo().Frame("leftframe");
                                            IWebElement txt_bookingno = driver.FindElement(By.XPath("/html/body/table[1]/tbody/tr/td/form/table/tbody/tr[2]/td/div/input[1]"));
                                            txt_bookingno.Click();
                                            string bookingno = Convert.ToString(drow["Booking #"]).Trim();
                                            txt_bookingno.SendKeys(bookingno);

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                                            IWebElement btn_go = driver.FindElement(By.XPath("/html/body/table[1]/tbody/tr/td/form/table/tbody/tr[2]/td/div/input[9]"));
                                            btn_go.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        }

                                        System.Threading.Thread.Sleep(2000);

                                        bool present = false;
                                        try
                                        {
                                            driver.SwitchTo().DefaultContent();

                                            driver.SwitchTo().Frame("bodyframe");


                                            if (isElementPresent(driver, By.XPath("//*[@id='bodytable']/tbody/tr[2]/td/table/tbody/tr/td[4]/div/strong/a")))
                                            {
                                                IWebElement text_result = driver.FindElement(By.XPath("//*[@id='bodytable']/tbody/tr[2]/td/table/tbody/tr/td[4]/div/strong/a"));
                                                text_result.Click();
                                                present = true;
                                            }
                                            else
                                            {
                                                present = false;
                                            }

                                        }
                                        catch (Exception ex)
                                        {
                                            present = false;
                                        }

                                        if (present == false)
                                        {
                                            //xlWorkSheet.Cells[i, 3] = "Cancelled / Error in booking";
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            drow["ContainerCount"] = "0";
                                        }
                                        else if (present == true)
                                        {
                                            string c_status = "";

                                            try
                                            {
                                                //bool table_containerno = driver.FindElement(By.XPath("//*[@id='pnlGrid']/table/tbody/tr[2]")).Displayed;

                                                if (isElementPresent(driver, By.XPath("//*[@id='pnlGrid']/table/tbody/tr[2]")))
                                                {
                                                    c_status = "Activity";
                                                    //drow["Activity"] = "Activity";
                                                }
                                                else
                                                {
                                                    c_status = "NO CONTAINER ACTIVITY";
                                                    drow["Activity"] = "NO CONTAINER ACTIVITY";
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                c_status = "NO CONTAINER ACTIVITY";
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }

                                            Thread.Sleep(500);

                                            if (c_status == "Activity")
                                            {

                                                ///Code to get Discharge port date and Empty Container Date
                                                ///
                                                HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                                IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='bodytable']/tbody/tr[3]/td/form/table[1]"));

                                                string temp = resulttable.GetAttribute("innerHTML");

                                                doc.LoadHtml(temp);
                                                var headers = doc.DocumentNode.SelectNodes("//tr/th");
                                                DataTable table = new DataTable();
                                                foreach (HtmlNode header in headers)
                                                {
                                                    table.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                }

                                                /// select rows with td elements
                                                /// 
                                                foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                {
                                                    table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                }

                                                for (int j = 0; j < table.Rows.Count; j++)
                                                {
                                                    if (table.Rows[j][0].ToString().Trim() == "Discharge Port")
                                                    {
                                                        drow["DischargedDate"] = table.Rows[j][3].ToString().Trim();
                                                    }
                                                }

                                                ///Getting Container Details
                                                ///
                                                HtmlAgilityPack.HtmlDocument doc1 = new HtmlAgilityPack.HtmlDocument();
                                                IWebElement resulttable1 = driver.FindElement(By.XPath("//*[@id='pnlGrid']/table"));

                                                string temp1 = resulttable1.GetAttribute("innerHTML");

                                                doc1.LoadHtml(temp1);
                                                var headers1 = doc1.DocumentNode.SelectNodes("//tr/th");
                                                DataTable table1 = new DataTable();
                                                foreach (HtmlNode header in headers1)
                                                {
                                                    table1.Columns.Add(header.InnerText.Trim()); // create columns from th
                                                }
                                                /// select rows with td elements
                                                /// 
                                                foreach (var row in doc1.DocumentNode.SelectNodes("//tr[td]"))
                                                {
                                                    table1.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                }

                                                //drow["Activity"] = "DUE BY 10.00 WITH " + table1.Rows.Count + " CNTR ACTIVITY";
                                                drow["Activity"] = table1.Rows.Count + " CONTAINER ACTIVITY OUT OF " + table1.Rows.Count + " CONTAINERS";
                                                drow["ContainerCount"] = table1.Rows.Count;
                                            }
                                            else
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                                drow["ContainerCount"] = "0";
                                            }
                                        }

                                        System.Threading.Thread.Sleep(1000);

                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }

                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "ONE")
                            {
                                if (drow["S.S.L"].ToString() == "OCEAN NETWORK EXPRESS")
                                {
                                    try
                                    {
                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        try
                                        {
                                            if (ONEflag == false)
                                            {
                                                driver.Navigate().GoToUrl("https://ecomm.one-line.com/ecom/CUP_HOM_3301.do?sessLocale=en?sessLocale=en");
                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                IWebElement txt24HoursCheck = driver.FindElement(By.XPath("//*[@id='chkNotToOpenNtc_1']"));
                                                txt24HoursCheck.Click();

                                                IWebElement btnClose = driver.FindElement(By.XPath("//*[@id='btnNtcClose1_1']"));
                                                btnClose.Click();

                                                ONEflag = true;
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            ONEflag = true;
                                        }

                                        IWebElement txt_bookingno1 = driver.FindElement(By.XPath("//*[@id='searchName']"));
                                        txt_bookingno1.Clear();
                                        txt_bookingno1.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnSearch1 = driver.FindElement(By.XPath("//*[@id='btnSearch']"));
                                        btnSearch1.Click();

                                        Thread.Sleep(2000); //This sleep is not necessary, just for demonstration


                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[3]"));
                                        if (txt_result.Text.Contains("No data was found"))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else if (txt_result.Text.Contains("Not Assigned"))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else
                                        {
                                            DataTable table = new DataTable();

                                            HtmlAgilityPack.HtmlDocument docheader = new HtmlAgilityPack.HtmlDocument();
                                            IWebElement resulttableHeader = driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[2]/div/table"));


                                            HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                            IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='main-grid']"));

                                            string tempheader = resulttableHeader.GetAttribute("innerHTML");

                                            string temp = resulttable.GetAttribute("innerHTML");

                                            docheader.LoadHtml(tempheader);

                                            doc.LoadHtml(temp);

                                            var headers = docheader.DocumentNode.SelectNodes("//tr/th");

                                            int count = 1;
                                            foreach (HtmlNode header in headers)
                                            {
                                                if (header.InnerText.Trim() == "&nbsp;")
                                                {
                                                    table.Columns.Add(header.InnerText.Trim() + count.ToString());
                                                    count++;
                                                }
                                                else
                                                {
                                                    table.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                }
                                            }
                                            ///select rows with td elements
                                            ///
                                            foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                            {
                                                table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                            }

                                            //drow["Activity"] = "DUE BY 10.00 WITH " + (table.Rows.Count - 1) + " CNTR ACTIVITY";

                                            drow["Activity"] = (table.Rows.Count - 1) + " CONTAINER ACTIVITY OUT OF " + (table.Rows.Count - 1) + " CONTAINERS";

                                            drow["ContainerCount"] = table.Rows.Count - 1;

                                            for (int k = 1; k <= table.Rows.Count - 1; k++)
                                            {
                                                IWebElement containerNo = driver.FindElement(By.XPath("//*[@id='" + k + "']/td[4]/a"));

                                                containerNo.Click();

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                DataTable containerDtls = getGrid("//*[@id='detail']");

                                                for (int j = 0; j < containerDtls.Rows.Count; j++)
                                                {
                                                    if (containerDtls.Rows[j]["Status"].ToString() == "Empty Container Returned from Customer")
                                                    {
                                                        lstEmptyContainer.Add(Convert.ToDateTime(containerDtls.Rows[j][3].ToString()));
                                                    }
                                                    else if (containerDtls.Rows[j]["Status"].ToString().Contains("Unloaded from") && containerDtls.Rows[j]["Status"].ToString().Contains("at Port of Discharging"))
                                                    {
                                                        lstDischarged.Add(Convert.ToDateTime(containerDtls.Rows[j][3].ToString()));
                                                    }
                                                }
                                            }

                                            if (lstDischarged.Count > 0)
                                            {
                                                DateTime DischargeDate = lstDischarged.Max(p => p);
                                                drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                            }

                                            if (lstEmptyContainer.Count > 0)
                                            {
                                                DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                            }
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "NYK")
                            {
                                if (drow["S.S.L"].ToString() == "NYK LINES")
                                {
                                    try
                                    {
                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        try
                                        {
                                            if (NYKflag == false)
                                            {
                                                driver.Navigate().GoToUrl("https://www.nykline.com/ecom/CUP_HOM_3301.do");

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                IWebElement txt24HoursCheck = driver.FindElement(By.XPath("//*[@id='chkNotToOpenNtc_1']"));
                                                txt24HoursCheck.Click();

                                                IWebElement btnClose = driver.FindElement(By.XPath("//*[@id='btnNtcClose1_1']"));
                                                btnClose.Click();

                                                NYKflag = true;
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            NYKflag = true;
                                        }

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='searchName']"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnSearch = driver.FindElement(By.XPath("//*[@id='btnSearch']"));
                                        btnSearch.Click();

                                        Thread.Sleep(4000); //This sleep is not necessary, just for demonstration

                                        driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[3]")).Click();

                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[3]"));
                                        if (txt_result.Text.StartsWith("No data was found"))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else if (txt_result.Text.StartsWith("Not Assigned"))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else
                                        {
                                            drow["Activity"] = "Activity";
                                        }


                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "HAPAG LLOYD")
                            {
                                if (drow["S.S.L"].ToString() == "HAPAG LLOYD")
                                {
                                    try
                                    {
                                        driver.Navigate().GoToUrl("https://www.hapag-lloyd.com/en/online-business/tracing/tracing-by-booking.html");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);
                                        Thread.Sleep(3000);

                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl12']"));
                                        txt_bookingno.Clear();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        Thread.Sleep(2000);
                                        txt_bookingno.SendKeys(bookingno);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl18']"));
                                        btnTrack.Click();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        Thread.Sleep(2000);

                                        IWebElement txtBookingVal = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl8']/tbody/tr/td/div/table/tbody/tr/td[1]/table"));
                                        if (txtBookingVal.Text.Contains("Booking not found."))
                                        {
                                            drow["Activity"] = "BOOKING NOT FOUND";
                                        }
                                        else
                                        {
                                            //getGrid("//*[@id='tracing_by_booking_f:hl27']");

                                            DataTable ContainerCount = new DataTable();

                                            HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                            IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl27']"));

                                            string temp = resulttable.GetAttribute("innerHTML");

                                            doc.LoadHtml(temp);
                                            var headers = doc.DocumentNode.SelectNodes("//tr/th");

                                            int a = 0;
                                            foreach (HtmlNode header in headers)
                                            {
                                                if (a < 6)
                                                {
                                                    ContainerCount.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                    a++;
                                                }
                                            }

                                            // select rows with td elements
                                            foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                            {
                                                ContainerCount.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                            }

                                            if (ContainerCount.Rows[0][2].ToString() == "")
                                            {
                                                ContainerCount.Rows.RemoveAt(0);
                                            }

                                            //xlWorkSheet.Cells[i, 3] = "Activity";

                                            int noofcontainer = 0;
                                            for (int n = 0; n < ContainerCount.Rows.Count; n++)
                                            {
                                                if (ContainerCount.Rows[n][2].ToString().Trim().Replace("&nbsp;", "") != "")
                                                {
                                                    noofcontainer++;
                                                }
                                            }


                                            if (noofcontainer == 0)
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                            else if (noofcontainer == ContainerCount.Rows.Count)
                                            {
                                                //drow["Activity"] = "DUE BY 10.00 WITH " + noofcontainer + " CNTR ACTIVITY";
                                                drow["Activity"] = noofcontainer + " CONTAINER ACTIVITY OUT OF " + noofcontainer + " CONTAINERS";

                                            }
                                            else if (noofcontainer < ContainerCount.Rows.Count)
                                            {
                                                //drow["Activity"] = "DUE BY 10.00 WITH " + noofcontainer + " CNTR ACTIVITY OUT OFF " + (ContainerCount.Rows.Count);
                                                drow["Activity"] = noofcontainer + " CONTAINER ACTIVITY OUT OF " + (ContainerCount.Rows.Count) + " CONTAINERS";
                                            }

                                            drow["ContainerCount"] = noofcontainer;

                                            try
                                            {
                                                for (int j = 1; j <= ContainerCount.Rows.Count; j++)
                                                {
                                                    IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;

                                                    //IWebElement thhead = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl27']/thead[1]"));
                                                    //exec.ExecuteScript("arguments[0].scrollIntoView();", thhead);

                                                    if (ContainerCount.Rows[j - 1][2].ToString().Trim().Replace("&nbsp;", "") != "")
                                                    {
                                                        IWebElement ContainerDtls = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl27']/tbody/tr[" + j + "]"));
                                                        ContainerDtls.Click();

                                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(10);


                                                        bool buttonflag = false;
                                                        int margin = 200;

                                                        IJavaScriptExecutor exec1 = (IJavaScriptExecutor)driver;

                                                        while (buttonflag == false)
                                                        {
                                                            try
                                                            {
                                                                margin = margin + 150;

                                                                exec1.ExecuteScript("scroll(0," + margin + ");");

                                                                IWebElement DetailsBtnClick = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl27:hl53']"));

                                                                System.Threading.Thread.Sleep(2000);

                                                                DetailsBtnClick.Click();

                                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                                buttonflag = true;
                                                            }
                                                            catch (Exception ex)
                                                            {
                                                                buttonflag = false;
                                                            }
                                                        }


                                                        DataTable ContainerSubDtls = new DataTable();

                                                        HtmlAgilityPack.HtmlDocument docDtls = new HtmlAgilityPack.HtmlDocument();
                                                        IWebElement resulttableDtls = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl66']"));

                                                        string tempDtls = resulttableDtls.GetAttribute("innerHTML");

                                                        docDtls.LoadHtml(tempDtls);
                                                        var headersDtls = docDtls.DocumentNode.SelectNodes("//tr/th");

                                                        int b = 0;
                                                        foreach (HtmlNode header in headersDtls)
                                                        {
                                                            if (b < 6)
                                                            {
                                                                ContainerSubDtls.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                                b++;
                                                            }
                                                        }

                                                        // select rows with td elements
                                                        foreach (var row in docDtls.DocumentNode.SelectNodes("//tr[td]"))
                                                        {
                                                            ContainerSubDtls.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                        }


                                                        if (ContainerSubDtls.Rows[0][0].ToString() == "" && ContainerSubDtls.Rows[0][1].ToString() == "" && ContainerSubDtls.Rows[0][2].ToString() == "")
                                                        {
                                                            ContainerSubDtls.Rows.RemoveAt(0);
                                                        }

                                                        foreach (DataRow dr in ContainerSubDtls.Rows)
                                                        {
                                                            if (dr["Status"].ToString() == "Discharged")
                                                            {
                                                                lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                                //xlWorkSheet.Cells[i, 5] = dr["Date"].ToString() + " " + dr["Time"].ToString();
                                                            }
                                                            else if (dr["Status"].ToString() == "Empty in depot")
                                                            {
                                                                lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                            }
                                                        }

                                                        driver.Navigate().Back();

                                                        Thread.Sleep(2000);

                                                        bool buttonflag1 = false;
                                                        int margin1 = 0;

                                                        IJavaScriptExecutor exec3 = (IJavaScriptExecutor)driver;
                                                        // exec3.ExecuteScript("arguments[0].scrollIntoView();", ContainerDtls);

                                                        while (buttonflag1 == false)
                                                        {
                                                            try
                                                            {
                                                                margin1 = margin1 - 150;

                                                                exec3.ExecuteScript("scroll(0," + margin1 + ");");

                                                                IWebElement currentContainerClick = driver.FindElement(By.XPath("//*[@id='tracing_by_booking_f:hl27']/tbody/tr[" + j + "]"));

                                                                System.Threading.Thread.Sleep(2000);

                                                                currentContainerClick.Click();

                                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                                buttonflag1 = true;
                                                            }
                                                            catch (Exception ex)
                                                            {
                                                                buttonflag1 = false;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                drow["DischargedDate"] = "Unable to catch Destination Date";
                                                drow["EmptyDepotDate"] = "Unable to catch Empty in Depot Date";
                                            }


                                            if (lstDischarged.Count > 0)
                                            {
                                                DateTime DischargeDate = lstDischarged.Max(p => p);
                                                drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                            }

                                            if (lstEmptyContainer.Count > 0)
                                            {
                                                DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                            }

                                            IJavaScriptExecutor exec2 = (IJavaScriptExecutor)driver;
                                            exec2.ExecuteScript("scroll(0,-250);");


                                        }
                                        Thread.Sleep(2000);
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "ZIM")
                            {
                                if (drow["S.S.L"].ToString() == "ZIM CONTAINER")
                                {
                                    try
                                    {
                                        if (zimflag == false)
                                        {
                                            driver.Navigate().GoToUrl("http://www.zim.com/pages/findcontainer.aspx");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

                                            Thread.Sleep(5000);

                                            if (isElementPresent(driver, By.XPath("/html/body/div[8]/div[2]/div[4]/div[2]/div/a")))
                                            {
                                                IWebElement element = driver.FindElement(By.XPath("/html/body/div[8]/div[2]/div[4]/div[2]/div/a"));

                                                if (element.GetAttribute("class") == "optanon-allow-all")
                                                {
                                                    element.Click();
                                                }
                                            }

                                            zimflag = true;
                                        }

                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='ConsNumber']"));
                                        txt_bookingno.Clear();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        txt_bookingno.SendKeys(bookingno);

                                        Thread.Sleep(2000);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[1]/div[1]/div/form/div[1]/span[2]/input"));
                                        btnTrack.Click();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);


                                        if (isElementPresent(driver, By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table")))
                                        {
                                            DataTable ContainerCount = new DataTable();

                                            Thread.Sleep(2000);

                                            ContainerCount = getGrid("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table");

                                            for (int n = 0; n < ContainerCount.Rows.Count; n++)
                                            {
                                                if (ContainerCount.Rows[n][1].ToString() == "" && ContainerCount.Rows[n][2].ToString() == "" && ContainerCount.Rows[n][3].ToString() == "")
                                                {
                                                    ContainerCount.Rows.RemoveAt(n);
                                                }
                                            }


                                            if (ContainerCount.Rows.Count > 0)
                                            {
                                                int noofcontainers = 0;

                                                foreach (DataRow tblrow in ContainerCount.Rows)
                                                {
                                                    if (tblrow[0].ToString() != "")
                                                    {
                                                        noofcontainers++;
                                                    }
                                                }

                                                if (noofcontainers == 1)
                                                {
                                                    drow["Activity"] = "1 CONTAINER ACTIVITY";
                                                    drow["ContainerCount"] = "1";


                                                    foreach (DataRow dr in ContainerCount.Rows)
                                                    {
                                                        if (dr["Last Activity"].ToString() == "Back from client")
                                                        {
                                                            lstDischarged.Add(Convert.ToDateTime(dr[3].ToString()));
                                                            //xlWorkSheet.Cells[i, 5] = dr["Date"].ToString() + " " + dr["Time"].ToString();
                                                        }
                                                        else if (dr["Last Activity"].ToString() == "Discharge Port")
                                                        {
                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr[3].ToString()));
                                                        }
                                                    }
                                                }
                                                else if (noofcontainers > 1)
                                                {

                                                    drow["Activity"] = ContainerCount.Rows.Count + " CONTAINER ACTIVITY";
                                                    drow["ContainerCount"] = ContainerCount.Rows.Count;

                                                    //int margin = 600;
                                                    //for (int n = 1; n <= ContainerCount.Rows.Count; n++)
                                                    //{
                                                    //    while (!isElementPresent(driver, By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table/tbody/tr[" + (n + 1) + "]/td/table")))
                                                    //    {
                                                    //        IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                    //        exec.ExecuteScript("scroll(0," + margin + ");");
                                                    //        margin = margin + 200;
                                                    //    }

                                                    //    IWebElement SingleContainer = driver.FindElement(By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table/tbody/tr[" + (n + 1) + "]/td/table"));
                                                    //    SingleContainer.Click();

                                                    //    Thread.Sleep(2000);

                                                    //    while (!isElementPresent(driver, By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table/tbody/tr[" + (n + 1) + "]/td/div/table")))
                                                    //    {
                                                    //        IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                    //        exec.ExecuteScript("scroll(0," + margin + ");");
                                                    //        margin = margin + 200;

                                                    //        if (margin > 3500)
                                                    //            break;
                                                    //    }

                                                    //    DataTable SingleContainerInfo = new DataTable();

                                                    //    HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                                    //    IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table/tbody/tr[" + (n + 1) + "]/td/div/table"));

                                                    //    string temp = resulttable.GetAttribute("innerHTML");

                                                    //    doc.LoadHtml(temp);

                                                    //    SingleContainerInfo.Columns.Add("Container");
                                                    //    SingleContainerInfo.Columns.Add("Last Activity");
                                                    //    SingleContainerInfo.Columns.Add("Location");
                                                    //    SingleContainerInfo.Columns.Add("Date");
                                                    //    SingleContainerInfo.Columns.Add("Vessel / Voyage");

                                                    //    // select rows with td elements
                                                    //    foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                    //    {
                                                    //        SingleContainerInfo.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                    //    }

                                                    //    foreach (DataRow dr in SingleContainerInfo.Rows)
                                                    //    {
                                                    //        if (dr["Last Activity"].ToString() == "Back from client")
                                                    //        {
                                                    //            lstDischarged.Add(Convert.ToDateTime(dr[3].ToString()));
                                                    //            //xlWorkSheet.Cells[i, 5] = dr["Date"].ToString() + " " + dr["Time"].ToString();
                                                    //        }
                                                    //        else if (dr["Last Activity"].ToString() == "Discharge Port")
                                                    //        {
                                                    //            lstEmptyContainer.Add(Convert.ToDateTime(dr[3].ToString()));
                                                    //        }
                                                    //    }

                                                    //    IWebElement SingleContainer1 = driver.FindElement(By.XPath("//*[@id='main']/div/div/div/div/div/div/div/div[1]/div[1]/div[4]/table/tbody/tr[" + (n + 1) + "]/td/table"));
                                                    //    SingleContainer1.Click();

                                                    //}
                                                }
                                                else
                                                {
                                                    drow["Activity"] = "NO CONTAINER ACTIVITY";
                                                }
                                            }
                                        }
                                        else
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        #region old code working upto 06/11/2018


                                        //IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='ctl00_PlaceHolderRightSideBar_ctl00_tracingWidget_txtTWValue']"));
                                        //txt_bookingno.Clear();
                                        //driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        //txt_bookingno.SendKeys(bookingno);


                                        //IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='ctl00_PlaceHolderRightSideBar_ctl00_tracingWidget_btnFindTWValue']"));
                                        //btnTrack.Click();
                                        //driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        //IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_AllData']"));

                                        //if (txt_result.Text.Contains("Container Number"))
                                        //{
                                        //    DataTable ContainerCount = new DataTable();

                                        //    HtmlAgilityPack.HtmlDocument docHeader = new HtmlAgilityPack.HtmlDocument();
                                        //    IWebElement resulttableHeader = driver.FindElement(By.XPath("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[1]"));

                                        //    string tempheader = resulttableHeader.GetAttribute("innerHTML");

                                        //    docHeader.LoadHtml(tempheader);

                                        //    var headers = docHeader.DocumentNode.SelectNodes("//th");

                                        //    foreach (HtmlNode header in headers)
                                        //    {
                                        //        ContainerCount.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                        //    }

                                        //    int noofContainer = 0;

                                        //    foreach (IWebElement tr in driver.FindElements(By.ClassName("cont_num_header")))
                                        //    {
                                        //        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

                                        //        if (tr.Text.Length == 11)
                                        //        {
                                        //            noofContainer++;
                                        //        }
                                        //    }


                                        //    if (noofContainer == 1)
                                        //    {

                                        //        //drow["Activity"] = "DUE BY 10.00 WITH 1 CNTR ACTIVITY";

                                        //        drow["Activity"] = "1 CONTAINER ACTIVITY OUT OF 1 CONTAINERS";
                                        //        drow["ContainerCount"] = "1";


                                        //        DataTable SingleContainerInfo = getGrid("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[3]");

                                        //        foreach (DataRow dr in SingleContainerInfo.Rows)
                                        //        {
                                        //            if (dr["Activity"].ToString() == "Back from client")
                                        //            {
                                        //                lstDischarged.Add(Convert.ToDateTime(dr[2].ToString()));
                                        //                //xlWorkSheet.Cells[i, 5] = dr["Date"].ToString() + " " + dr["Time"].ToString();
                                        //            }
                                        //            else if (dr["Activity"].ToString() == "Discharge Port")
                                        //            {
                                        //                lstEmptyContainer.Add(Convert.ToDateTime(dr[2].ToString()));
                                        //            }
                                        //        }

                                        //    }
                                        //    else if (noofContainer > 1)
                                        //    {
                                        //        //drow["Activity"] = "DUE BY 10.00 WITH " + noofContainer + " CNTR ACTIVITY";
                                        //        drow["Activity"] = noofContainer + " CONTAINER ACTIVITY OUT OF " + noofContainer + " CONTAINERS";
                                        //        drow["ContainerCount"] = noofContainer;

                                        //        int margin = 200;
                                        //        for (int n = 1; n <= noofContainer; n++)
                                        //        {
                                        //            IWebElement SingleContainer = driver.FindElement(By.XPath("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[" + (n + 1) + "]/td[1]/a"));
                                        //            SingleContainer.Click();

                                        //            Thread.Sleep(2000);

                                        //            while (!isElementPresent(driver, By.XPath("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[" + (n + 2) + "]")))
                                        //            {
                                        //                IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                        //                exec.ExecuteScript("scroll(0," + margin + ");");
                                        //                margin = margin + 200;
                                        //            }

                                        //            DataTable SingleContainerInfo = getGrid("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[" + (n + 2) + "]");

                                        //            foreach (DataRow dr in SingleContainerInfo.Rows)
                                        //            {
                                        //                if (dr["Activity"].ToString() == "Back from client")
                                        //                {
                                        //                    lstDischarged.Add(Convert.ToDateTime(dr[2].ToString()));
                                        //                    //xlWorkSheet.Cells[i, 5] = dr["Date"].ToString() + " " + dr["Time"].ToString();
                                        //                }
                                        //                else if (dr["Activity"].ToString() == "Discharge Port")
                                        //                {
                                        //                    lstEmptyContainer.Add(Convert.ToDateTime(dr[2].ToString()));
                                        //                }
                                        //            }

                                        //            IWebElement SingleContainer1 = driver.FindElement(By.XPath("//*[@id='ctl00_SPWebPartManager1_g_38d2bc51_5585_4f8a_ac53_a92bb5037412_ctl00_gridConsignmentDetails']/tbody/tr[" + (n + 1) + "]/td[1]/a"));
                                        //            SingleContainer1.Click();


                                        //        }
                                        //    }
                                        //    else
                                        //    {
                                        //        drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        //    }

                                        #endregion

                                        if (lstDischarged.Count > 0)
                                        {
                                            DateTime DischargeDate = lstDischarged.Max(p => p);
                                            drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                        }

                                        if (lstEmptyContainer.Count > 0)
                                        {
                                            DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                            drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                        }


                                        //else if (txt_result.Text.Contains("The Information you requested may not be available"))
                                        //{
                                        //    drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        //}


                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();
                                        drow["Activity"] = "ZIM WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "MOL")
                            {
                                if (drow["S.S.L"].ToString() == "MITSUI O.S.K. LINES LTD")
                                {
                                    try
                                    {
                                        driver.Navigate().GoToUrl("http://web.molpower.com/Tracking/Main/Home");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        bool flag = true;

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        if (flag == true)
                                        {
                                            IWebElement searchBy = driver.FindElement(By.XPath("//*[@id='divSearchCriteria']/div[1]/div/div/span/span/span[1]"));
                                            searchBy.Click();

                                            IWebElement optionBooking = driver.FindElement(By.XPath("//*[@id='SearchBy_listbox']/li[3]"));
                                            optionBooking.Click();
                                        }
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);


                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='SearchString']"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='btnSearch']"));
                                        btnTrack.Click();

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);


                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='gridTracking']/div[3]/ul/li/span"));
                                        if (int.Parse(txt_result.Text.Trim()) > 0)
                                        {
                                            drow["Activity"] = "DUE BY 10.00 CONTAINER ACTIVITY";

                                            IWebElement btnClear = driver.FindElement(By.XPath("//*[@id='btnClear']"));
                                            btnClear.Click();

                                            flag = true;
                                        }
                                        else
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            flag = false;
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "OOCL")
                            {
                                if (drow["S.S.L"].ToString() == "OOCL")
                                {
                                    try
                                    {
                                        driver.Navigate().GoToUrl("https://moc.oocl.com/party/cargotracking/mobile/mobile_ct_search.jsf?ANONYMOUS_BEHAVIOR=BUILD_UP&ENTRY_TYPE=OOCL&ENTRY=MCC");

                                        //driver.Navigate();
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        bool flag = true;

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='form:bkg_num']"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='form:goToCargoTrackingBkg']"));
                                        btnTrack.Click();

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='form']/div[2]/div[1]/div[2]"));

                                        Thread.Sleep(3000);

                                        if (txt_result.Text.ToUpper().Contains("CANCELLED"))
                                        {
                                            drow["Activity"] = "BOOKING CANCELLED";
                                        }
                                        else
                                        {
                                            IWebElement txt_result1 = driver.FindElement(By.XPath("//*[@id='form']/div[2]/div[1]/div[3]"));

                                            if (txt_result1.Text.Trim().Contains("To be confirmed"))
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                            else
                                            {
                                                string temp = txt_result1.Text.Substring(txt_result1.Text.IndexOf("\n") + 1, txt_result1.Text.Length - txt_result1.Text.IndexOf("\n") - 1);

                                                string temp1 = temp.Trim().Substring(0, temp.IndexOf("\n"));

                                                if (temp1.Trim().Replace("-", "").Length == 11)
                                                {
                                                    int containerCount = 0;
                                                    foreach (IWebElement tr in driver.FindElements(By.ClassName("bd")))
                                                    {
                                                        if (tr.Text.Contains("Latest Event:"))
                                                        {
                                                            containerCount++;
                                                            int startindex = tr.Text.ToString().LastIndexOf("Latest Event:");
                                                            int endIndex = tr.Text.ToString().LastIndexOf("Route");

                                                            string textout = tr.Text.Substring(startindex, endIndex - startindex);

                                                            textout = textout.Substring(textout.Substring(0, textout.LastIndexOf("\r\n")).LastIndexOf("\r\n"));
                                                        }
                                                    }

                                                    //drow["Activity"] = "DUE BY 10.00 WITH " + containerCount + " CNTR ACTIVITY";
                                                    drow["Activity"] = containerCount + " CONTAINER ACTIVITY OUT OF " + containerCount + " CONTAINERS";
                                                    drow["ContainerCount"] = containerCount;
                                                }
                                                else
                                                {
                                                    drow["Activity"] = "PLEASE REVIEW";
                                                }
                                            }
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        drow["Activity"] = "OOCL WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "HYUNDAI")
                            {
                                if (drow["S.S.L"].ToString() == "HYUNDAI")
                                {
                                    try
                                    {
                                        driver.Navigate().GoToUrl("https://www.hmm21.com/cms/business/ebiz/trackTrace/trackTrace/index.jsp");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        driver.SwitchTo().Frame("_frame1");

                                        if (Hyundaiflag == false)
                                        {
                                            IWebElement btnTrackNTrace = driver.FindElement(By.XPath("/html/body/div[3]/div[2]/ul/li/a[3]"));
                                            btnTrackNTrace.Click();
                                            Hyundaiflag = false;
                                        }
                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='trackTable']/tbody/tr[3]/td/div/input[1]"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='trackTable']/tbody/tr[4]/td[2]/a[2]"));
                                        btnTrack.Click();

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        Thread.Sleep(5000);

                                        IWebElement txt_result = driver.FindElement(By.XPath("//*[@id='trackingForm']"));

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        if (txt_result.Text.ToUpper().Contains("BOOKING NUMBER IS INVALID. PLEASE TRY IT AGAIN WITH CORRECT NUMBER."))
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        else if (txt_result.Text.ToUpper().Contains("CONTAINER NO."))
                                        {
                                            try
                                            {
                                                DataTable containerTable = getGrid("//*[@id='trackingForm']/div[2]/table");

                                                if (containerTable.Rows.Count > 0)
                                                {
                                                    //drow["Activity"] = "DUE BY 10.00 WITH " + containerTable.Rows.Count + " CNTR ACTIVITY";

                                                    drow["Activity"] = containerTable.Rows.Count + " CONTAINER ACTIVITY OUT OF " + containerTable.Rows.Count + " CONTAINERS";
                                                    drow["ContainerCount"] = containerTable.Rows.Count;
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                drow["Activity"] = "Pl Review. Unable to find";
                                            }

                                            try
                                            {


                                                DataTable containerDetails = getGrid("//*[@id='trackingForm']/div[4]/table");

                                                if (containerDetails.Rows.Count > 0)
                                                {
                                                    foreach (DataRow dr in containerDetails.Rows)
                                                    {
                                                        if (dr["Status Description"].ToString() == "Discharged")
                                                        {
                                                            lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                        }
                                                        else if (dr["Status Description"].ToString() == "Gate in")
                                                        {
                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                        }
                                                    }
                                                }

                                            }
                                            catch (Exception ex)
                                            {

                                            }
                                        }
                                        else
                                        {
                                            bool OutOfFormFlag = false;

                                            foreach (IWebElement divelement in driver.FindElements(By.ClassName("base_table01")))
                                            {
                                                //if (divelement.GetAttribute("class") == "base_table01")
                                                //{
                                                if (isElementPresent(driver, By.XPath("/html/body/div[5]/table")))
                                                {
                                                    if (OutOfFormFlag == false)
                                                    {
                                                        try
                                                        {
                                                            DataTable containerTable = getGrid("/html/body/div[5]/table");

                                                            if (containerTable.Rows.Count > 0)
                                                            {
                                                                //drow["Activity"] = "DUE BY 10.00 WITH " + containerTable.Rows.Count + " CNTR ACTIVITY";

                                                                drow["Activity"] = containerTable.Rows.Count + " CONTAINER ACTIVITY OUT OF " + containerTable.Rows.Count + " CONTAINERS";
                                                                drow["ContainerCount"] = containerTable.Rows.Count;
                                                            }

                                                        }
                                                        catch (Exception ex)
                                                        {
                                                            drow["Activity"] = "Pl Review. Unable to find";
                                                        }

                                                        try
                                                        {
                                                            if (isElementPresent(driver, By.XPath("/html/body/form[3]/div/table")))
                                                            {
                                                                DataTable containerDetails = getGrid("/html/body/form[3]/div/table");

                                                                if (containerDetails.Rows.Count > 0)
                                                                {
                                                                    foreach (DataRow dr in containerDetails.Rows)
                                                                    {
                                                                        if (dr["Status Description"].ToString() == "Discharged")
                                                                        {
                                                                            lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                                        }
                                                                        else if (dr["Status Description"].ToString() == "Gate in")
                                                                        {
                                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString() + " " + dr["Time"].ToString()));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        catch (Exception ex)
                                                        {

                                                        }

                                                        OutOfFormFlag = true;
                                                    }
                                                }
                                            }
                                        }

                                        if (drow["Activity"].ToString() == "")
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }

                                        if (lstDischarged.Count > 0)
                                        {
                                            DateTime DischargeDate = lstDischarged.Max(p => p);
                                            drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                        }

                                        if (lstEmptyContainer.Count > 0)
                                        {
                                            DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                            drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                        }

                                        driver.Navigate().Back();
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "EVERGREEN")
                            {
                                if (drow["S.S.L"].ToString() == "EVERGREEN MARINE CORPORATION")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        if (EverGreenflag == false)
                                        {
                                            driver.Navigate().GoToUrl("https://www.shipmentlink.com/servlet/TDB1_CargoTracking.do");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            Thread.Sleep(2000);

                                            IWebElement rdobooking = driver.FindElement(By.XPath("//*[@id='quick']/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[1]/table/tbody/tr[3]/td/input"));
                                            rdobooking.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                            IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='quick']/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[2]/input[1]"));
                                            txt_bookingno.Clear();
                                            txt_bookingno.SendKeys(bookingno);

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                            IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='quick']/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[2]/input[2]"));
                                            btnTrack.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                            EverGreenflag = true;
                                        }
                                        else
                                        {
                                            IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='quick2']/tbody/tr/td[2]/input[1]"));
                                            txt_bookingno.Clear();
                                            txt_bookingno.SendKeys(bookingno);

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                            IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='quick2']/tbody/tr/td[2]/input[2]"));
                                            btnTrack.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
                                        }

                                        IWebElement txt_result = null;
                                        bool resultflag = false;
                                        foreach (IWebElement table in driver.FindElements(By.TagName("table")))
                                        {
                                            if (table.Text.Contains("Container Activity Information") && table.Text.Contains("Container No.") && table.Text.Contains("Tare Weight") && table.Text.Contains("Empty Out") && !table.Text.Contains("Basic Information"))
                                            {
                                                txt_result = table;
                                                resultflag = true;
                                            }
                                        }

                                        Thread.Sleep(2000);

                                        if (resultflag == true)
                                        {
                                            if (txt_result.Text.Contains("Container Activity Information") && txt_result.Text.Contains("Container No.") && txt_result.Text.Contains("Tare Weight") && txt_result.Text.Contains("Empty Out"))
                                            {
                                                DataTable ContainerData = new DataTable();


                                                HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();

                                                string temp = txt_result.GetAttribute("innerHTML");

                                                doc.LoadHtml(temp);
                                                var headers = doc.DocumentNode.SelectNodes("//tr/td");

                                                int limitrowContent = 0;

                                                List<string> rowContent = new List<string>();

                                                foreach (HtmlNode header in headers)
                                                {
                                                    var classValue = header.Attributes["class"] == null ? null : header.Attributes["class"].Value;
                                                    if (classValue == "f12rown2")
                                                    {
                                                        ContainerData.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                    }
                                                    else if (classValue == "f12rown1")
                                                    {
                                                        if (limitrowContent == 0)
                                                        {
                                                            IWebDriver popup = null;
                                                            string mainWindow = driver.CurrentWindowHandle;

                                                            driver.FindElement(By.LinkText(header.InnerText)).Click();

                                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                                            foreach (string handle in driver.WindowHandles)
                                                            {
                                                                popup = driver.SwitchTo().Window(handle);
                                                            }

                                                            Thread.Sleep(4000);
                                                            popup.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                                            bool containerDtlsFlag = false;

                                                            DataTable ContainerDtls = new DataTable();

                                                            foreach (IWebElement table in popup.FindElements(By.TagName("table")))
                                                            {
                                                                if (table.Text.Contains("Container Moves") && table.Text.Contains("Date") && table.Text.Contains("Container Moves") && table.Text.Contains("Location") && table.Text.Contains("Vessel Voyage") && !table.Text.Contains("Intermodal"))
                                                                {
                                                                    while (containerDtlsFlag == false)
                                                                    {
                                                                        containerDtlsFlag = true;

                                                                        HtmlAgilityPack.HtmlDocument docContainerMovementDtls = new HtmlAgilityPack.HtmlDocument();

                                                                        string temp1 = table.GetAttribute("innerHTML");

                                                                        docContainerMovementDtls.LoadHtml(temp1);
                                                                        var headersContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//tr/td");

                                                                        int limitrowContentDtls = 0;

                                                                        List<string> rowContent1 = new List<string>();

                                                                        foreach (HtmlNode header1 in headersContainerDtls)
                                                                        {
                                                                            var classValue1 = header1.Attributes["class"] == null ? null : header1.Attributes["class"].Value;
                                                                            if (classValue1 == "f13tabn3")
                                                                            {
                                                                                ContainerDtls.Columns.Add(header1.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                                            }
                                                                            else if (classValue1 == "f12rown1")
                                                                            {
                                                                                if (limitrowContentDtls < 3)
                                                                                {
                                                                                    rowContent1.Add(header1.InnerText.Replace("&nbsp;", "").Trim());
                                                                                    limitrowContentDtls++;
                                                                                }
                                                                                else
                                                                                {
                                                                                    rowContent1.Add(header1.InnerText.Replace("&nbsp;", "").Trim());

                                                                                    ContainerDtls.Rows.Add(rowContent1.ToArray());
                                                                                    rowContent1.Clear();
                                                                                    limitrowContentDtls = 0;
                                                                                }
                                                                            }
                                                                        }

                                                                        if (ContainerDtls.Rows.Count > 0)
                                                                        {
                                                                            foreach (DataRow dr in ContainerDtls.Rows)
                                                                            {
                                                                                if (dr["Container Moves"].ToString() == "Discharged")
                                                                                {
                                                                                    lstDischarged.Add(Convert.ToDateTime(dr["Date"].ToString()));
                                                                                }
                                                                                else if (dr["Container Moves"].ToString() == "Gate in")
                                                                                {
                                                                                    lstEmptyContainer.Add(Convert.ToDateTime(dr["Date"].ToString()));
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }

                                                            popup.Close();

                                                            //switch back to original window
                                                            driver.SwitchTo().Window(mainWindow);

                                                            IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;
                                                            exec.ExecuteScript("scroll(0,-250);");
                                                        }

                                                        if (limitrowContent < 9)
                                                        {
                                                            rowContent.Add(header.InnerText.Replace("&nbsp;", "").Trim());
                                                            limitrowContent++;
                                                        }
                                                        else
                                                        {
                                                            rowContent.Add(header.InnerText.Replace("&nbsp;", "").Trim());
                                                            limitrowContent++;

                                                            ContainerData.Rows.Add(rowContent.ToArray());
                                                            rowContent.Clear();
                                                            limitrowContent = 0;
                                                        }
                                                    }
                                                }

                                                //drow["Activity"] = "DUE BY 10.00 WITH " + ContainerData.Rows.Count + " CNTR ACTIVITY";

                                                drow["Activity"] = ContainerData.Rows.Count + " CONTAINER ACTIVITY OUT OF " + ContainerData.Rows.Count + " CONTAINERS";
                                                drow["ContainerCount"] = ContainerData.Rows.Count;

                                                if (lstDischarged.Count > 0)
                                                {
                                                    DateTime DischargeDate = lstDischarged.Max(p => p);
                                                    drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                                }

                                                if (lstEmptyContainer.Count > 0)
                                                {
                                                    DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                                    drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                                }

                                            }
                                            else
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                        }
                                        else
                                        {
                                            drow["Activity"] = "NO CONTAINER ACTIVITY";
                                        }
                                        //driver.Navigate().Back();

                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            ///Version 3.0.0.1
                            ///Yang Ming has two different XPath is containers are assigned to a booking
                            ///IF BL NO is there then Xpath will be different and if BL No. is not assigned then xpath will contain Booking#
                            ///
                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "YANG MING")
                            {
                                if (drow["S.S.L"].ToString() == "YANG MING LINE")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        //if (YangMingflag == false)
                                        //{

                                        driver.Navigate().GoToUrl("https://www.yangming.com/e-service/Track_Trace/track_trace_cargo_tracking.aspx");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        IWebElement rdoBookingNo = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_rdolType_2']"));
                                        rdoBookingNo.Click();

                                        //YangMingflag = true;
                                        //}

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_num1']"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_btnTrack']"));
                                        btnTrack.Click();

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        Thread.Sleep(3000);


                                        IWebElement txt_result = null;
                                        bool isContainerTableExist = false;
                                        int containerCount = 0;

                                        try
                                        {
                                            try
                                            {
                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                if (isElementPresent(driver, By.XPath("//*[@id='ContentPlaceHolder1_rptBLNo_gvLatestEvent_0']")))
                                                {
                                                    isContainerTableExist = true;
                                                    txt_result = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_rptBLNo_gvLatestEvent_0']"));
                                                }
                                                else if (isElementPresent(driver, By.XPath("//*[@id='ContentPlaceHolder1_rptBKNo_gvLatestEvent_0']")))
                                                {
                                                    isContainerTableExist = true;
                                                    txt_result = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_rptBKNo_gvLatestEvent_0']"));
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                isContainerTableExist = false;
                                            }


                                            if (isContainerTableExist == true)
                                            {


                                                if (txt_result.Text.ToUpper().Contains("BOOKING NUMBER IS INVALID. PLEASE TRY IT AGAIN WITH CORRECT NUMBER."))
                                                {
                                                    drow["Activity"] = "NO CONTAINER ACTIVITY";
                                                }
                                                else if (txt_result.Text.ToUpper().Contains("CONTAINER NO."))
                                                {
                                                    DataTable containerTable = new DataTable();

                                                    try
                                                    {
                                                        //*[@id="ContentPlaceHolder1_rptBLNo_gvLatestEvent_0"]

                                                        //DataTable containerTable = getGrid("//*[@id='ContentPlaceHolder1_rptBLNo_gvLatestEvent_0']");


                                                        HtmlAgilityPack.HtmlDocument docContainerMovementDtls = new HtmlAgilityPack.HtmlDocument();

                                                        string temp1 = txt_result.GetAttribute("innerHTML");

                                                        docContainerMovementDtls.LoadHtml(temp1);
                                                        var headersContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//thead/tr/td");

                                                        foreach (HtmlNode header1 in headersContainerDtls)
                                                        {
                                                            containerTable.Columns.Add(header1.InnerText.Trim());
                                                        }

                                                        // var tbodyContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr/td");

                                                        foreach (var row in docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr[td]"))
                                                        {
                                                            containerTable.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                        }

                                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

                                                        if (containerTable.Rows.Count > 0)
                                                        {
                                                            //drow["Activity"] = "DUE BY 10.00 WITH " + containerTable.Rows.Count + " CNTR ACTIVITY";

                                                            drow["Activity"] = containerTable.Rows.Count + " CONTAINER ACTIVITY OUT OF " + containerTable.Rows.Count + " CONTAINERS";
                                                            drow["ContainerCount"] = containerTable.Rows.Count;
                                                        }
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        drow["Activity"] = "Pl Review. Unable to find";
                                                    }

                                                    try
                                                    {
                                                        for (int k = 1; k <= containerTable.Rows.Count; k++)
                                                        {
                                                            if (isElementPresent(driver, By.XPath("//*[@id='ContentPlaceHolder1_rptBLNo_gvLatestEvent_0']/tbody/tr[" + k + "]/td[1]/a")))
                                                            {
                                                                if (drow["Container Number"].ToString() == "")
                                                                {
                                                                    drow["Container Number"] = containerTable.Rows[k - 1][0].ToString();
                                                                }
                                                                else
                                                                {
                                                                    drow["Container Number"] = drow["Container Number"].ToString() + " | " + containerTable.Rows[k - 1][0].ToString();
                                                                }

                                                                IWebElement clickContainerlink = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_rptBLNo_gvLatestEvent_0']/tbody/tr[" + k + "]/td[1]/a"));

                                                                clickContainerlink.Click();

                                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                                                                DataTable containerDetails = new DataTable();

                                                                IWebElement txtContainerDtlsResult = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_gvContainerNo']"));
                                                                HtmlAgilityPack.HtmlDocument docContainerMovementDtls = new HtmlAgilityPack.HtmlDocument();

                                                                string temp1 = txtContainerDtlsResult.GetAttribute("innerHTML");

                                                                docContainerMovementDtls.LoadHtml(temp1);
                                                                var headersContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//thead/tr/td");

                                                                foreach (HtmlNode header1 in headersContainerDtls)
                                                                {
                                                                    containerDetails.Columns.Add(header1.InnerText.Trim());
                                                                }

                                                                // var tbodyContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr/td");

                                                                foreach (var row in docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr[td]"))
                                                                {
                                                                    containerDetails.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                                }


                                                                if (containerDetails.Rows.Count > 0)
                                                                {
                                                                    foreach (DataRow dr in containerDetails.Rows)
                                                                    {
                                                                        if (dr["Event"].ToString() == "Discharged")
                                                                        {
                                                                            lstDischarged.Add(Convert.ToDateTime(dr["Date/Time"].ToString()));
                                                                        }
                                                                        else if (dr["Event"].ToString() == "Empty Returned")
                                                                        {
                                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr["Date/Time"].ToString()));
                                                                        }
                                                                    }
                                                                }

                                                                driver.Navigate().Back();
                                                            }
                                                            else if (isElementPresent(driver, By.XPath("//*[@id='ContentPlaceHolder1_rptBKNo_gvLatestEvent_0']/tbody/tr[" + k + "]/td[1]/a")))
                                                            {
                                                                if (drow["Container Number"].ToString() == "")
                                                                {
                                                                    drow["Container Number"] = containerTable.Rows[k - 1][0].ToString();
                                                                }
                                                                else
                                                                {
                                                                    drow["Container Number"] = drow["Container Number"].ToString() + " | " + containerTable.Rows[k - 1][0].ToString();
                                                                }


                                                                IWebElement clickContainerlink = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_rptBKNo_gvLatestEvent_0']/tbody/tr[" + k + "]/td[1]/a"));

                                                                clickContainerlink.Click();

                                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

                                                                DataTable containerDetails = new DataTable();

                                                                IWebElement txtContainerDtlsResult = driver.FindElement(By.XPath("//*[@id='ContentPlaceHolder1_gvContainerNo']"));
                                                                HtmlAgilityPack.HtmlDocument docContainerMovementDtls = new HtmlAgilityPack.HtmlDocument();

                                                                string temp1 = txtContainerDtlsResult.GetAttribute("innerHTML");

                                                                docContainerMovementDtls.LoadHtml(temp1);
                                                                var headersContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//thead/tr/td");

                                                                foreach (HtmlNode header1 in headersContainerDtls)
                                                                {
                                                                    containerDetails.Columns.Add(header1.InnerText.Trim());
                                                                }

                                                                // var tbodyContainerDtls = docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr/td");

                                                                foreach (var row in docContainerMovementDtls.DocumentNode.SelectNodes("//tbody/tr[td]"))
                                                                {
                                                                    containerDetails.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                                }


                                                                if (containerDetails.Rows.Count > 0)
                                                                {
                                                                    foreach (DataRow dr in containerDetails.Rows)
                                                                    {
                                                                        if (dr["Event"].ToString() == "Discharged")
                                                                        {
                                                                            lstDischarged.Add(Convert.ToDateTime(dr["Date/Time"].ToString()));
                                                                        }
                                                                        else if (dr["Event"].ToString() == "Empty Returned")
                                                                        {
                                                                            lstEmptyContainer.Add(Convert.ToDateTime(dr["Date/Time"].ToString()));
                                                                        }
                                                                    }
                                                                }

                                                                driver.Navigate().Back();
                                                            }

                                                        }
                                                    }
                                                    catch (Exception ex)
                                                    {

                                                    }
                                                }
                                            }
                                            else
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                        }
                                        catch (Exception ex)
                                        {

                                        }

                                        if (lstDischarged.Count > 0)
                                        {
                                            DateTime DischargeDate = lstDischarged.Max(p => p);
                                            drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                        }

                                        if (lstEmptyContainer.Count > 0)
                                        {
                                            DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                            drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                        }

                                        driver.Navigate().Back();


                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "SM LINE")
                            {
                                if (drow["S.S.L"].ToString() == "SM LINE")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();


                                        if (SMLINEsflag == false)
                                        {
                                            driver.Navigate().GoToUrl("http://esvc.smlines.com/smline/CUP_HOM_3301.do");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);


                                            driver.SwitchTo().DefaultContent();

                                            IWebElement rdoBookingNo = driver.FindElement(By.XPath("//*[@id='searchType']"));
                                            rdoBookingNo.Click();


                                            IWebElement optionBooking = driver.FindElement(By.XPath("//*[@id='searchType']/option[1]"));
                                            optionBooking.Click();

                                            SMLINEsflag = true;
                                        }

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        string bookingno = Convert.ToString(drow["Booking #"]).Trim();

                                        IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='searchName']"));
                                        txt_bookingno.Clear();
                                        txt_bookingno.SendKeys(bookingno);

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                        IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='btnSearch']"));
                                        btnTrack.Click();

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        Thread.Sleep(3000);


                                        IWebElement txt_result = null;

                                        try
                                        {

                                            txt_result = driver.FindElement(By.XPath("//*[@id='mainInfo']"));

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            if (txt_result.Text.Contains("No data was found"))
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";
                                            }
                                            else if (txt_result.Text.Contains("Not Assigned"))
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";

                                            }
                                            else
                                            {
                                                DataTable table = new DataTable();

                                                HtmlAgilityPack.HtmlDocument docheader = new HtmlAgilityPack.HtmlDocument();
                                                IWebElement resulttableHeader = driver.FindElement(By.XPath("//*[@id='gview_main-grid']/div[2]/div/table"));


                                                HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();
                                                IWebElement resulttable = driver.FindElement(By.XPath("//*[@id='main-grid']"));

                                                string tempheader = resulttableHeader.GetAttribute("innerHTML");

                                                string temp = resulttable.GetAttribute("innerHTML");

                                                docheader.LoadHtml(tempheader);

                                                doc.LoadHtml(temp);

                                                var headers = docheader.DocumentNode.SelectNodes("//tr/th");

                                                int count = 1;
                                                foreach (HtmlNode header in headers)
                                                {
                                                    if (header.InnerText.Trim() == "&nbsp;")
                                                    {
                                                        table.Columns.Add(header.InnerText.Trim() + count.ToString());
                                                        count++;
                                                    }
                                                    else
                                                    {
                                                        table.Columns.Add(header.InnerText.Replace("&nbsp;", "").Trim()); // create columns from th
                                                    }
                                                }

                                                foreach (var row in doc.DocumentNode.SelectNodes("//tr[td]"))
                                                {
                                                    table.Rows.Add(row.SelectNodes("td").Select(td => td.InnerText.Trim().Replace("&nbsp;", "")).ToArray());
                                                }


                                                //drow["Activity"] = "DUE BY 10.00 WITH " + table.Rows.Count + " CNTR ACTIVITY";

                                                drow["Activity"] = (table.Rows.Count - 1) + " CONTAINER ACTIVITY OUT OF " + (table.Rows.Count - 1) + " CONTAINERS";
                                                drow["ContainerCount"] = table.Rows.Count - 1;

                                                for (int k = 1; k <= table.Rows.Count - 1; k++)
                                                {
                                                    IWebElement containerNo = driver.FindElement(By.XPath("//*[@id='" + k + "']/td[4]/a"));

                                                    containerNo.Click();

                                                    driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                                    DataTable containerDtls = getGrid("//*[@id='detail']");

                                                    foreach (DataRow dr in containerDtls.Rows)
                                                    {
                                                        if (dr[1].ToString().Contains("Unloaded from") && dr[1].ToString().Contains("at Port of Discharging"))
                                                        {
                                                            if (Convert.ToDateTime(dr[3]) <= DateTime.Now)
                                                            {
                                                                lstDischarged.Add(Convert.ToDateTime(dr[3]));
                                                            }
                                                        }
                                                        else if (dr[1].ToString().Contains("Empty Container Returned from Customer"))
                                                        {
                                                            if (Convert.ToDateTime(dr[3]) <= DateTime.Now)
                                                            {
                                                                lstEmptyContainer.Add(Convert.ToDateTime(dr[3]));
                                                            }
                                                        }
                                                    }

                                                    //driver.Navigate().Back();
                                                }
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            drow["Activity"] = "Error on website";
                                        }


                                        if (lstDischarged.Count > 0)
                                        {
                                            DateTime DischargeDate = lstDischarged.Max(p => p);
                                            drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                        }

                                        if (lstEmptyContainer.Count > 0)
                                        {
                                            DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                            drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "HAMBURG")
                            {
                                if (drow["S.S.L"].ToString() == "HAMBURG SUD")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;

                                        if (Hamburgflag == false)
                                        {
                                            driver.Navigate().GoToUrl("https://www.hamburgsud-line.com/liner/en/liner_services/ecommerce/track_trace/index.html");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            //foreach (IWebElement frm in driver.FindElements(By.Id("ePortalMainFrame")))
                                            //{
                                            if (isElementPresent(driver, By.XPath("//*[@id='ePortalMainFrame']")))
                                            {
                                                driver.SwitchTo().DefaultContent();
                                                driver.SwitchTo().Frame("ePortalMainFrame");

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

                                                Hamburgflag = true;
                                            }
                                            //}
                                        }

                                        string bookingno = drow["Booking #"].ToString().Trim();

                                        int sequence = 7;
                                        int sequence1 = 30;
                                        int sequence2 = 45;
                                        int sequence3 = 90;
                                        int sequence4 = 0;
                                        bool isexist = isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + (sequence + 2) + ":inputReferences']"));

                                        if (isexist == false)
                                        {   //*[@id="j_idt6:searchForm:j_idt8:inputReferences"]
                                            sequence = 6;
                                            sequence1 = 28;
                                            sequence2 = 43;
                                            sequence3 = 88;
                                            sequence4 = 92;
                                            isexist = isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + (sequence + 2) + ":inputReferences']"));

                                        }

                                        if (isexist)
                                        {

                                            IWebElement txt_bookingno = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + (sequence + 2) + ":inputReferences']"));
                                            txt_bookingno.Clear();
                                            txt_bookingno.SendKeys(bookingno);

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);

                                            //int margin = 600;
                                            //while (!isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + (sequence + 2) + ":search-submit']")))
                                            //{

                                            //}


                                            //Actions act = new Actions(driver);
                                            //act.MoveToElement(btnTrack).Perform();

                                            //new WebDriverWait(driver, 60).until(ExpectedConditions.visibilityOf(child_menu));
                                            //act.moveToElement(main_menu).moveToElement(child_menu).click().build().perform();

                                            IWebElement btnTrack = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + (sequence + 2) + ":search-submit']"));
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", btnTrack);
                                            btnTrack.Click();

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            Thread.Sleep(3000);

                                            IWebElement txt_result = null;

                                            bool bookingFoundflag = false;

                                            try
                                            {
                                                try
                                                {
                                                    if (isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:messages']/div")))
                                                    {
                                                        txt_result = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:messages']/div"));

                                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", txt_result);

                                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(2);

                                                        bookingFoundflag = true;
                                                    }
                                                    else
                                                    {
                                                        bookingFoundflag = false;
                                                    }
                                                }
                                                catch (Exception ex)
                                                {
                                                    bookingFoundflag = false;
                                                }


                                                if (bookingFoundflag == true)
                                                {
                                                    drow["Activity"] = "NO CONTAINER ACTIVITY";
                                                }
                                                else
                                                {

                                                    DataTable table = new DataTable();
                                                    DataTable SingleContainerGrid = new DataTable();
                                                    try
                                                    {   //*[@id="j_idt6:searchForm:j_idt28:j_idt31"]/div/table


                                                        if (isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table")))
                                                        {
                                                            IWebElement element = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table"));

                                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", element);

                                                            SingleContainerGrid = getGrid("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table");
                                                        }
                                                        else if (isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence1 + ":j_idt" + (sequence1 + 3) + "']/div/table")))
                                                        {
                                                            IWebElement element = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence1 + ":j_idt" + (sequence1 + 3) + "']/div/table"));

                                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", element);

                                                            table = getGrid("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence1 + ":j_idt" + (sequence1 + 3) + "']/div/table");
                                                        }
                                                        else
                                                        {

                                                            if (sequence == 6)
                                                            {
                                                                sequence3++;

                                                                while (!isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table")))
                                                                {
                                                                    sequence3++;
                                                                }

                                                                IWebElement element = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table"));

                                                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", element);

                                                                SingleContainerGrid = getGrid("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table");
                                                            }
                                                        }

                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        SingleContainerGrid = getGrid("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + sequence3 + "']/div/table");
                                                    }

                                                    if (table.Rows.Count > 1)
                                                    {
                                                        //drow["Activity"] = "DUE BY 10.00 WITH " + table.Rows.Count + " CNTR ACTIVITY";

                                                        drow["Activity"] = (table.Rows.Count) + " CONTAINER ACTIVITY OUT OF " + (table.Rows.Count) + " CONTAINERS";
                                                        drow["ContainerCount"] = table.Rows.Count;

                                                        for (int j = 0; j < table.Rows.Count; j++)
                                                        {
                                                            //*[@id="j_idt7:searchForm:j_idt30:j_idt33:0:contDetailsLink"]
                                                            //*[@id="j_idt6:searchForm:j_idt28:j_idt31:0:contDetailsLink"]

                                                            IWebElement SingleContainerClick = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence1 + ":j_idt" + (sequence1 + 3) + ":" + j + ":contDetailsLink']"));

                                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", SingleContainerClick);

                                                            SingleContainerClick.Click();

                                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                                            Thread.Sleep(2000);

                                                            SingleContainerGrid.Clear();
                                                            //*[@id="j_idt7:searchForm:j_idt45:j_idt90"]/div/table

                                                            IWebElement element = null;


                                                            if (isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + (sequence3) + "']/div/table")))
                                                            {
                                                                element = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + (sequence3) + "']/div/table"));

                                                            }
                                                            else if (isElementPresent(driver, By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + (sequence4) + "']/div/table")))
                                                            {
                                                                element = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":j_idt" + (sequence4) + "']/div/table"));
                                                            }

                                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", element);

                                                            SingleContainerGrid = getGrid(element);

                                                            foreach (DataRow dr in SingleContainerGrid.Rows)
                                                            {
                                                                if (dr[2].ToString() == "Discharge")
                                                                {
                                                                    lstDischarged.Add(Convert.ToDateTime(dr[0]));
                                                                }
                                                                else if (dr[2].ToString() == "Empty in Depot")
                                                                {
                                                                    lstEmptyContainer.Add(Convert.ToDateTime(dr[0]));
                                                                }
                                                            }


                                                            IWebElement backbutton = driver.FindElement(By.XPath("//*[@id='j_idt" + sequence + ":searchForm:j_idt" + sequence2 + ":contDetailsBackButton']"));

                                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", backbutton);

                                                            Thread.Sleep(2000);

                                                            backbutton.Click();
                                                        }
                                                    }
                                                    else if (SingleContainerGrid.Rows.Count > 1)
                                                    {
                                                        //drow["Activity"] = "DUE BY 10.00 WITH 1 CNTR ACTIVITY";

                                                        drow["Activity"] = "1 CONTAINER ACTIVITY OUT OF 1 CONTAINERS";
                                                        drow["ContainerCount"] = 1;

                                                        foreach (DataRow dr in SingleContainerGrid.Rows)
                                                        {
                                                            if (dr[2].ToString() == "Discharge")
                                                            {
                                                                lstDischarged.Add(Convert.ToDateTime(dr[0]));
                                                            }
                                                            else if (dr[2].ToString() == "Empty in Depot")
                                                            {
                                                                lstEmptyContainer.Add(Convert.ToDateTime(dr[0]));
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                drow["Activity"] = "Error on website";
                                            }
                                        }

                                        if (lstDischarged.Count > 0)
                                        {
                                            DateTime DischargeDate = lstDischarged.Max(p => p);
                                            drow["DischargedDate"] = DischargeDate.ToShortDateString();
                                        }

                                        if (lstEmptyContainer.Count > 0)
                                        {
                                            DateTime EmptyContainer = lstEmptyContainer.Max(p => p);
                                            drow["EmptyDepotDate"] = EmptyContainer.ToShortDateString();
                                        }

                                        // MessageBox.Show("HAMBURG SUD file updated");
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }


                            ///MAERSK SEALAND
                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "MAERSK")
                            {
                                if (drow["S.S.L"].ToString() == "MAERSK SEALAND" || drow["S.S.L"].ToString() == "MAERSK-SEALAND")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        //IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;

                                        if (Maerskflag == false)
                                        {
                                            driver.Navigate().GoToUrl("https://my.maerskline.com/dashboard");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            IWebElement element = null;

                                            if (isElementPresent(driver, By.XPath("//*[@id='username']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='username']"));
                                                element.Click();
                                                element.SendKeys(Properties.Settings.Default.MAERSKUserName);
                                            }
                                            if (isElementPresent(driver, By.XPath("//*[@id='password']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='password']"));
                                                element.Click();
                                                element.SendKeys(Properties.Settings.Default.MAERSKPassword);
                                            }

                                            if (isElementPresent(driver, By.XPath("//*[@id='loginBtn']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='loginBtn']"));
                                                element.Click();

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);
                                            }

                                            Maerskflag = true;

                                            Thread.Sleep(5000);
                                        }

                                        Thread.Sleep(2000);

                                        driver.Navigate().GoToUrl("https://my.maerskline.com/shipmentbinder/b/" + drow["Booking #"].ToString().Trim() + "/false/overview#tab_containers");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        Thread.Sleep(3000);

                                        int ContainerCount = 0;
                                        int noofActivity = 0;
                                        int balance = 0;
                                        

                                        if (isElementPresent(driver, By.XPath("//*[@id='containers']")))
                                        {
                                            IWebElement containerTab = driver.FindElement(By.XPath("//*[@id='containers']"));

                                            foreach (IWebElement objElement in containerTab.FindElements(By.TagName("div")))
                                            {   
                                                if (objElement.GetAttribute("class") == "span2 ellipsis container-span")
                                                {
                                                    IWebElement containerNo = objElement.FindElement(By.TagName("strong"));

                                                    if (containerNo.Text.Length > 5)
                                                    {
                                                        noofActivity++;
                                                    }
                                                    else if (containerNo.Text.Length < 5)
                                                    {
                                                        balance++;
                                                    }

                                                    ContainerCount++;

                                                    IWebElement containerType = objElement.FindElement(By.TagName("span"));

                                                }
                                                else if (objElement.GetAttribute("class") == "error-container error-container-top error-container-warn")
                                                {
                                                    drow["Activity"] = "Booking Cancelled";
                                                }
                                            }

                                        }

                                        //foreach (IWebElement objElement in driver.FindElements(By.TagName("div")))
                                        //{
                                        //    if (objElement.GetAttribute("class") == "span2 ellipsis container-span")
                                        //    {
                                        //        IWebElement containerNo = objElement.FindElement(By.TagName("strong"));

                                        //        if (containerNo.Text.Length > 5)
                                        //        {
                                        //            noofActivity++;
                                        //        }
                                        //        else if (containerNo.Text.Length < 5)
                                        //        {
                                        //            balance++;
                                        //        }

                                        //        ContainerCount++;

                                        //        IWebElement containerType = objElement.FindElement(By.TagName("span"));

                                        //    }
                                        //    else if (objElement.GetAttribute("class") == "error-container error-container-top error-container-warn")
                                        //    {
                                        //        drow["Activity"] = "Booking Cancelled";
                                        //    }
                                        //}


                                        if (drow["Activity"].ToString().Trim() == "")
                                        {
                                            if (noofActivity == 0)
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";

                                                drow["ContainerCount"] = noofActivity;
                                            }
                                            else
                                            {
                                                if (noofActivity == ContainerCount)
                                                {
                                                    drow["Activity"] = noofActivity + " CONTAINER ACTIVITY";
                                                }
                                                else
                                                {
                                                    drow["Activity"] = noofActivity + " CONTAINER ACTIVITY OUT OF " + ContainerCount;
                                                }

                                                drow["ContainerCount"] = noofActivity;
                                            }
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS." + "\n" + ex.ToString();
                                    }
                                }
                            }

                            ///SAFMARINE
                            if (cb_ssl.Text == "---Select---" || cb_ssl.Text == "SAFMARINE")
                            {
                                if (drow["S.S.L"].ToString() == "SAFMARINE CONTAINER LINES")
                                {
                                    try
                                    {
                                        List<DateTime> lstDischarged = new List<DateTime>();
                                        List<DateTime> lstEmptyContainer = new List<DateTime>();

                                        IJavaScriptExecutor exec = (IJavaScriptExecutor)driver;

                                        if (Maerskflag == false)
                                        {
                                            driver.Navigate().GoToUrl("https://my.safmarine.com/dashboard");

                                            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                            IWebElement element = null;

                                            Thread.Sleep(4000);

                                            if (isElementPresent(driver, By.XPath("//*[@id='username']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='username']"));
                                                element.Click();
                                                element.SendKeys(Properties.Settings.Default.SafmarineUserName);
                                            }
                                            if (isElementPresent(driver, By.XPath("//*[@id='password']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='password']"));
                                                element.Click();
                                                element.SendKeys(Properties.Settings.Default.SafmarinePassword);
                                            }

                                            if (isElementPresent(driver, By.XPath("//*[@id='loginBtn']")))
                                            {
                                                element = driver.FindElement(By.XPath("//*[@id='loginBtn']"));
                                                element.Click();

                                                driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);
                                            }
                                            Maerskflag = true;

                                            Thread.Sleep(2000);
                                        }

                                        driver.Navigate().GoToUrl("https://my.safmarine.com/shipmentbinder/b/" + drow["Booking #"].ToString().Trim() + "/false/overview#tab_containers");

                                        driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromMinutes(1);

                                        Thread.Sleep(2000);

                                        int ContainerCount = 0;
                                        int noofActivity = 0;
                                        int balance = 0;


                                        foreach (IWebElement objElement in driver.FindElements(By.TagName("div")))
                                        {
                                            if (objElement.GetAttribute("class") == "span2 ellipsis container-span")
                                            {

                                                IWebElement containerNo = objElement.FindElement(By.TagName("strong"));

                                                if (containerNo.Text.Length > 5)
                                                {
                                                    noofActivity++;
                                                }
                                                else if (containerNo.Text.Length < 5)
                                                {
                                                    balance++;
                                                }

                                                ContainerCount++;

                                                containerNo = objElement.FindElement(By.TagName("span"));

                                            }
                                            else if (objElement.GetAttribute("class") == "error-container error-container-top error-container-warn")
                                            {
                                                drow["Activity"] = "Booking Cancelled";
                                            }
                                        }

                                        if (drow["Activity"].ToString() == "")
                                        {
                                            if (noofActivity == 0)
                                            {
                                                drow["Activity"] = "NO CONTAINER ACTIVITY";

                                                drow["ContainerCount"] = noofActivity;
                                            }
                                            else
                                            {
                                                if (noofActivity == ContainerCount)
                                                {
                                                    drow["Activity"] = noofActivity + " CONTAINER ACTIVITY";
                                                }
                                                else
                                                {
                                                    drow["Activity"] = noofActivity + " CONTAINER ACTIVITY OUT OF " + ContainerCount;
                                                }

                                                drow["ContainerCount"] = noofActivity;
                                            }
                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        WebSiteUpdationCount++;
                                        currentSSL = drow["S.S.L"].ToString();

                                        drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                                    }
                                }
                            }

                            //try
                            //{
                            //    if (WebSiteUpdationCount == 3)
                            //    {
                            //        emailHelper emailhelper = new emailHelper();
                            //        emailhelper.emailhelperconnection();
                            //        emailhelper.sendemail(drow["S.S.L"].ToString());
                            //    }
                            //}
                            //catch (Exception ex)
                            //{ 

                            //}
                        }
                        else
                        {
                            if (drow["S.S.L"].ToString() == currentSSL)
                            {
                                drow["Activity"] = currentSSL + " WEBSITE HAS BEEN UPDATED. FAIL TO GET DETAILS.";
                            }
                            else
                            {
                                currentSSL = "";
                                WebSiteUpdationCount = 0;
                            }
                        }
                    }
                }
                return data;
            }
            catch (Exception ex)
            {
                return data;
            }
        }

        private void btnExport_Click(object sender, EventArgs e)
        {
            try
            {
                dgExcelData.SelectAll();
                DataObject dataObj = dgExcelData.GetClipboardContent();

                if (dataObj != null)
                    Clipboard.SetDataObject(dataObj);

                Microsoft.Office.Interop.Excel.Application xlexcel;
                Microsoft.Office.Interop.Excel.Workbook xlWorkBook;
                Microsoft.Office.Interop.Excel.Worksheet xlWorkSheet;
                object misValue = System.Reflection.Missing.Value;
                xlexcel = new Microsoft.Office.Interop.Excel.Application();
                xlexcel.Visible = true;
                xlWorkBook = xlexcel.Workbooks.Add(misValue);
                xlWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);
                Microsoft.Office.Interop.Excel.Range CR = (Microsoft.Office.Interop.Excel.Range)xlWorkSheet.Cells[1, 1];
                CR.Select();
                xlWorkSheet.PasteSpecial(CR, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, true);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }


        //IWebDriver popup = null;
        //string mainWindow = driver.CurrentWindowHandle;

        //bool foundPopupTitle = false;
        //foreach (string handle in driver.WindowHandles)
        //{
        //    popup = driver.SwitchTo().Window(handle);
        //    if (popup.Title.Contains(title))
        //    {
        //        foundPopupTitle = true;
        //        break;
        //    }
        //}

        //if (foundPopupTitle)
        //{
        //    popup.Close();
        //}
        ////switch back to original window
        //driver.SwitchTo().Window(mainWindow);

    }
}
